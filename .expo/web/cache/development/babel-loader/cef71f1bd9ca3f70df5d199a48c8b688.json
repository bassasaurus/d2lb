{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/blake/react_native/d2lb/app/screens/FlightListScreen.js\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { STYLES } from \"../styles/styles\";\nimport api from \"../api/axiosConfig\";\nimport FlightItem from \"../components/FlightItem\";\nimport RoundButton from \"../components/RoundButton\";\n\nvar FlightListScreen = function FlightListScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/api/flights/\"));\n\n            case 2:\n              result = _context.sent;\n              setData(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    var refreshOnBack = navigation.addListener(\"focus\", function () {\n      var fetchData = function fetchData() {\n        var result;\n        return _regeneratorRuntime.async(function fetchData$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(api.get(\"/api/flights/\"));\n\n              case 2:\n                result = _context2.sent;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      fetchData();\n    });\n    return refreshOnBack;\n  }, [navigation]);\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var onRefresh = useCallback(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/api/flights/\"));\n\n            case 2:\n              result = _context3.sent;\n              setData(result.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.7,\n      style: styles.touchable,\n      onPress: function onPress() {\n        return navigation.navigate(\"FlightDetail\", {\n          item: item\n        });\n      }\n    }, React.createElement(FlightItem, {\n      date: item.date,\n      route: item.route,\n      type: item.aircraft_type,\n      reg: item.registration,\n      dur: item.duration,\n      crew: item.second_in_command ? \"SIC\" : \"PIC\",\n      dayL: item.landings_day ? item.landings_day : 0,\n      nitL: item.landings_night ? item.landings_night : 0\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: data.results,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    })\n  }), React.createElement(RoundButton, {\n    buttonSize: 60,\n    iconName: \"plus\",\n    buttonColor: STYLES.green,\n    onPress: function onPress() {\n      return navigation.navigate(\"FlightCreate\");\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    width: \"100%\",\n    backgroundColor: STYLES.elementBackground,\n    padding: 10,\n    marginTop: 2,\n    marginRight: 10,\n    marginLeft: 10\n  },\n  text: {\n    fontSize: 16,\n    justifyContent: \"space-between\",\n    color: STYLES.blue\n  },\n  touchable: {\n    alignItems: \"center\",\n    backgroundColor: STYLES.highlight,\n    padding: 0,\n    marginTop: 2\n  }\n});\nexport default FlightListScreen;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/screens/FlightListScreen.js"],"names":["React","useState","useEffect","useCallback","STYLES","api","FlightItem","RoundButton","FlightListScreen","navigation","data","setData","refreshing","setRefreshing","fetchData","get","result","refreshOnBack","addListener","wait","timeout","Promise","resolve","setTimeout","onRefresh","then","renderItem","item","styles","touchable","navigate","date","route","aircraft_type","registration","duration","second_in_command","landings_day","landings_night","container","results","id","toString","green","StyleSheet","create","width","flex","marginTop","StatusBar","currentHeight","backgroundColor","elementBackground","padding","marginRight","marginLeft","text","fontSize","justifyContent","color","blue","alignItems","highlight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  FlatList,\n  StyleSheet,\n  Text,\n  StatusBar,\n  TouchableOpacity,\n  RefreshControl,\n} from \"react-native\";\n\nimport { STYLES } from \"../styles/styles\";\nimport api from \"../api/axiosConfig\";\nimport FlightItem from \"../components/FlightItem\";\nimport RoundButton from \"../components/RoundButton\";\n\nconst FlightListScreen = ({ navigation }) => {\n  const [data, setData] = useState([]);\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"/api/flights/\");\n      // console.log(result);\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const refreshOnBack = navigation.addListener(\"focus\", () => {\n      const fetchData = async () => {\n        const result = await api.get(\"/api/flights/\");\n      };\n      fetchData();\n    });\n\n    return refreshOnBack;\n  }, [navigation]);\n\n  const wait = (timeout) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout));\n  };\n\n  const onRefresh = useCallback(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"/api/flights/\");\n      setData(result.data);\n    };\n\n    fetchData();\n    setRefreshing(true);\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      activeOpacity={0.7}\n      style={styles.touchable}\n      onPress={() => navigation.navigate(\"FlightDetail\", { item: item })}\n    >\n      <FlightItem\n        date={item.date}\n        route={item.route}\n        type={item.aircraft_type}\n        reg={item.registration}\n        dur={item.duration}\n        crew={item.second_in_command ? \"SIC\" : \"PIC\"}\n        dayL={item.landings_day ? item.landings_day : 0}\n        nitL={item.landings_night ? item.landings_night : 0}\n      />\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data.results}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id.toString()}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      />\n      <RoundButton\n        buttonSize={60}\n        iconName='plus'\n        buttonColor={STYLES.green}\n        onPress={() => navigation.navigate(\"FlightCreate\")}\n      ></RoundButton>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    width: \"100%\",\n    backgroundColor: STYLES.elementBackground,\n    padding: 10,\n    marginTop: 2,\n    marginRight: 10,\n    marginLeft: 10,\n  },\n  text: {\n    fontSize: 16,\n    justifyContent: \"space-between\",\n    color: STYLES.blue,\n  },\n  touchable: {\n    alignItems: \"center\",\n    backgroundColor: STYLES.highlight,\n    padding: 0,\n    marginTop: 2,\n  },\n});\n\nexport default FlightListScreen;\n"]},"metadata":{},"sourceType":"module"}