{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/blake/react_native/d2lb/app/screens/FlightListScreen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport api from \"../api/axiosConfig\";\n\nvar FlightListScreen = function FlightListScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/api/flights/\"));\n\n            case 2:\n              result = _context.sent;\n              setData(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchData();\n  }, []);\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var Item = function Item(_ref2) {\n    var title = _ref2.title,\n        subTitle = _ref2.subTitle;\n    return React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: styles.title\n    }, title), React.createElement(Text, {\n      style: styles.title\n    }, subTitle));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.7,\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"Detail\", {\n          item: item\n        });\n      }\n    }, React.createElement(Item, {\n      title: item.date + \" \" + item.route,\n      subTitle: item.aircraft_type + \" \" + item.registration\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: data.results,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    })\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    width: \"100%\",\n    backgroundColor: \"gainsboro\",\n    padding: 10,\n    marginTop: 2,\n    marginRight: 10,\n    marginLeft: 10\n  },\n  title: {\n    fontSize: 16,\n    justifyContent: \"space-between\",\n    color: \"mediumblue\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 0,\n    marginTop: 2\n  }\n});\nexport default FlightListScreen;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/screens/FlightListScreen.js"],"names":["React","useState","useEffect","api","FlightListScreen","navigation","data","setData","refreshing","setRefreshing","fetchData","get","result","wait","timeout","Promise","resolve","setTimeout","onRefresh","useCallback","then","Item","title","subTitle","styles","item","renderItem","button","navigate","date","route","aircraft_type","registration","container","results","id","toString","StyleSheet","create","width","flex","marginTop","StatusBar","currentHeight","backgroundColor","padding","marginRight","marginLeft","fontSize","justifyContent","color","alignItems"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;AAWA,OAAOC,GAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACnBJ,QAAQ,CAAC,EAAD,CADW;AAAA;AAAA,MACpCK,IADoC;AAAA,MAC9BC,OAD8B;;AAAA,wBAGPP,KAAK,CAACC,QAAN,CAAe,KAAf,CAHO;AAAA;AAAA,MAGpCO,UAHoC;AAAA,MAGxBC,aAHwB;;AAK3CP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKP,GAAG,CAACQ,GAAJ,CAAQ,eAAR,CADL;;AAAA;AACVC,cAAAA,MADU;AAEhBL,cAAAA,OAAO,CAACK,MAAM,CAACN,IAAR,CAAP;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAKAI,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMG,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAa;AACxB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,aAAaC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAvB;AAAA,KAAZ,CAAP;AACD,GAFD;;AAIA,MAAMI,SAAS,GAAGlB,KAAK,CAACmB,WAAN,CAAkB,YAAM;AACxCV,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,IAAAA,IAAI,CAAC,IAAD,CAAJ,CAAWO,IAAX,CAAgB;AAAA,aAAMX,aAAa,CAAC,KAAD,CAAnB;AAAA,KAAhB;AACD,GAHiB,EAGf,EAHe,CAAlB;;AAKA,MAAMY,IAAI,GAAG,SAAPA,IAAO;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAUC,QAAV,SAAUA,QAAV;AAAA,WACX,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACF;AAApB,OAA4BA,KAA5B,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACF;AAApB,OAA4BC,QAA5B,CAFF,CADW;AAAA,GAAb;;AAOA,MAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGD,IAAH,SAAGA,IAAH;AAAA,WACjB,oBAAC,gBAAD;AACE,MAAA,aAAa,EAAE,GADjB;AAEE,MAAA,KAAK,EAAED,MAAM,CAACG,MAFhB;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMtB,UAAU,CAACuB,QAAX,CAAoB,QAApB,EAA8B;AAAEH,UAAAA,IAAI,EAAEA;AAAR,SAA9B,CAAN;AAAA;AAHX,OAKE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEA,IAAI,CAACI,IAAL,GAAY,GAAZ,GAAkBJ,IAAI,CAACK,KADhC;AAEE,MAAA,QAAQ,EAAEL,IAAI,CAACM,aAAL,GAAqB,GAArB,GAA2BN,IAAI,CAACO;AAF5C,MALF,CADiB;AAAA,GAAnB;;AAaA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAER,MAAM,CAACS;AAA5B,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE3B,IAAI,CAAC4B,OADb;AAEE,IAAA,UAAU,EAAER,UAFd;AAGE,IAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,aAAUA,IAAI,CAACU,EAAL,CAAQC,QAAR,EAAV;AAAA,KAHhB;AAIE,IAAA,cAAc,EACZ,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE5B,UAA5B;AAAwC,MAAA,SAAS,EAAEU;AAAnD;AALJ,IADF,CADF;AAYD,CAvDD;;AAyDA,IAAMM,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,SAAS,EAAEC,SAAS,CAACC,aAAV,IAA2B;AAH7B,GADoB;AAM/BlB,EAAAA,IAAI,EAAE;AACJc,IAAAA,KAAK,EAAE,MADH;AAEJK,IAAAA,eAAe,EAAE,WAFb;AAGJC,IAAAA,OAAO,EAAE,EAHL;AAIJJ,IAAAA,SAAS,EAAE,CAJP;AAKJK,IAAAA,WAAW,EAAE,EALT;AAMJC,IAAAA,UAAU,EAAE;AANR,GANyB;AAc/BzB,EAAAA,KAAK,EAAE;AACL0B,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,cAAc,EAAE,eAFX;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAdwB;AAmB/BvB,EAAAA,MAAM,EAAE;AACNwB,IAAAA,UAAU,EAAE,QADN;AAENP,IAAAA,eAAe,EAAE,SAFX;AAGNC,IAAAA,OAAO,EAAE,CAHH;AAINJ,IAAAA,SAAS,EAAE;AAJL;AAnBuB,CAAlB,CAAf;AA2BA,eAAerC,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  FlatList,\n  StyleSheet,\n  Text,\n  StatusBar,\n  TouchableOpacity,\n  RefreshControl,\n} from \"react-native\";\nimport api from \"../api/axiosConfig\";\n\nconst FlightListScreen = ({ navigation }) => {\n  const [data, setData] = useState([]);\n\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await api.get(\"/api/flights/\");\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const wait = (timeout) => {\n    return new Promise((resolve) => setTimeout(resolve, timeout));\n  };\n\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n  const Item = ({ title, subTitle }) => (\n    <View style={styles.item}>\n      <Text style={styles.title}>{title}</Text>\n      <Text style={styles.title}>{subTitle}</Text>\n    </View>\n  );\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      activeOpacity={0.7}\n      style={styles.button}\n      onPress={() => navigation.navigate(\"Detail\", { item: item })}\n    >\n      <Item\n        title={item.date + \" \" + item.route}\n        subTitle={item.aircraft_type + \" \" + item.registration}\n      />\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={data.results}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id.toString()}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n  },\n  item: {\n    width: \"100%\",\n    backgroundColor: \"gainsboro\",\n    padding: 10,\n    marginTop: 2,\n    marginRight: 10,\n    marginLeft: 10,\n  },\n  title: {\n    fontSize: 16,\n    justifyContent: \"space-between\",\n    color: \"mediumblue\",\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 0,\n    marginTop: 2,\n  },\n});\n\nexport default FlightListScreen;\n"]},"metadata":{},"sourceType":"module"}