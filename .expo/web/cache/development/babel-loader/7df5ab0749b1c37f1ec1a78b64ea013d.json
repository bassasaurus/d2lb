{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport FlightStackNavigator from \"./FlightStackNavigator\";\nimport AppContext from \"../components/AppContext\";\n\nfunction DrawerNavigator(_ref) {\n  var navigation = _ref.navigation;\n  var Context = useContext(AppContext);\n  var Drawer = createDrawerNavigator();\n\n  function LogoutContent(props) {\n    return React.createElement(DrawerContentScrollView, props, React.createElement(DrawerItemList, props), React.createElement(DrawerItem, {\n      label: \"Logout\",\n      onPress: function onPress() {\n        Context.setIsSignedIn(false);\n      }\n    }));\n  }\n\n  if (Context.isSignedInValue) {\n    return React.createElement(NavigationContainer, null, React.createElement(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return React.createElement(LogoutContent, props);\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Logbook\",\n      component: FlightStackNavigator,\n      options: {\n        headerShown: false\n      }\n    })));\n  } else {\n    return React.createElement(SafeAreaView, null, React.createElement(LoginScreen, null));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {}\n});\nexport default DrawerNavigator;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/navigation/DrawerNavigator.js"],"names":["React","useContext","useEffect","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","NavigationContainer","LoginScreen","FlightStackNavigator","AppContext","DrawerNavigator","navigation","Context","Drawer","LogoutContent","props","setIsSignedIn","isSignedInValue","headerShown","styles","StyleSheet","create","container"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;;;AAEA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,cAHF,EAIEC,UAJF,QAKO,0BALP;AAMA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,UAAP;;AAEA,SAASC,eAAT,OAAyC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACvC,MAAMC,OAAO,GAAGZ,UAAU,CAACS,UAAD,CAA1B;AAEA,MAAMI,MAAM,GAAGX,qBAAqB,EAApC;;AAEA,WAASY,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,WACE,oBAAC,uBAAD,EAA6BA,KAA7B,EACE,oBAAC,cAAD,EAAoBA,KAApB,CADF,EAEE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbH,QAAAA,OAAO,CAACI,aAAR,CAAsB,KAAtB;AACD;AAJH,MAFF,CADF;AAWD;;AAED,MAAIJ,OAAO,CAACK,eAAZ,EAA6B;AAC3B,WACE,oBAAC,mBAAD,QACE,oBAAC,MAAD,CAAQ,SAAR;AACE,MAAA,aAAa,EAAE,uBAACF,KAAD;AAAA,eAAW,oBAAC,aAAD,EAAmBA,KAAnB,CAAX;AAAA;AADjB,OAGE,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,SAAS,EAAEP,oBAFb;AAGE,MAAA,OAAO,EAAE;AAAEU,QAAAA,WAAW,EAAE;AAAf;AAHX,MAHF,CADF,CADF;AAaD,GAdD,MAcO;AACL,WACE,oBAAC,YAAD,QACE,oBAAC,WAAD,OADF,CADF;AAKD;AACF;;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AADoB,CAAlB,CAAf;AAIA,eAAeZ,eAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { StyleSheet, SafeAreaView } from \"react-native\";\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport FlightStackNavigator from \"./FlightStackNavigator\";\nimport AppContext from \"../components/AppContext\";\n\nfunction DrawerNavigator({ navigation }) {\n  const Context = useContext(AppContext);\n\n  const Drawer = createDrawerNavigator();\n\n  function LogoutContent(props) {\n    return (\n      <DrawerContentScrollView {...props}>\n        <DrawerItemList {...props} />\n        <DrawerItem\n          label='Logout'\n          onPress={() => {\n            Context.setIsSignedIn(false);\n          }}\n        />\n      </DrawerContentScrollView>\n    );\n  }\n\n  if (Context.isSignedInValue) {\n    return (\n      <NavigationContainer>\n        <Drawer.Navigator\n          drawerContent={(props) => <LogoutContent {...props} />}\n        >\n          <Drawer.Screen\n            name='Logbook'\n            component={FlightStackNavigator}\n            options={{ headerShown: false }}\n          />\n        </Drawer.Navigator>\n      </NavigationContainer>\n    );\n  } else {\n    return (\n      <SafeAreaView>\n        <LoginScreen />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n\nexport default DrawerNavigator;\n"]},"metadata":{},"sourceType":"module"}