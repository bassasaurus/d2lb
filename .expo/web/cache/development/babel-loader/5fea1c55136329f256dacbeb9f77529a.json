{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport AircraftPicker from \"./AircraftPicker\";\nimport AppTextInput from \"./AppTextInput\";\nimport TailnumberPicker from \"./TailnumberPicker\";\nimport ApproachPicker from \"./ApproachPicker\";\nimport AppText from \"./AppText\";\nimport Checkbox from \"./Checkbox\";\nimport ActivityModal from \"./ActivityModal\";\nimport AppContext from \"./AppContext\";\nimport { STYLES } from \"../styles/styles\";\n\nfunction FlightForm(_ref) {\n  var initialValues = _ref.initialValues,\n      method = _ref.method;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      calVisible = _useState2[0],\n      setCalVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      aircraftId = _useState4[0],\n      setAircraftId = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formCount = _useState6[0],\n      setFormCount = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      scrollEnabled = _useState8[0],\n      setScrollEnabled = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      acTailMatch = _useState10[0],\n      setAcTailMatch = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      submitting = _useState12[0],\n      setSubmitting = _useState12[1];\n\n  var Context = useContext(AppContext);\n\n  function handleAircraftId(id) {\n    if (aircraftId === id) {\n      setAcTailMatch(true);\n      return true;\n    } else {\n      setAcTailMatch(false);\n      setAircraftId(id);\n      return false;\n    }\n  }\n\n  var dashNotSpace = function dashNotSpace(str) {\n    str = str.replace(/\\s/g, \"-\");\n    return str;\n  };\n\n  var required = \"*required\";\n  var positive = \"Must be positive number.\";\n  var flightSchema = yup.object().shape({\n    date: yup.string().required(required),\n    route: yup.string().required(required),\n    aircraft_type: yup.string().required(required),\n    registration: yup.string().required(required),\n    duration: yup.number().positive(positive).required(required).min(0.1, \"Must be greater than 0.1\").max(30.0, \"Seems unlikely.\"),\n    landings_day: yup.number().positive(positive).integer(\"Integers only, no decimals.\"),\n    landings_night: yup.number().positive(positive).integer(\"Integers only, no decimals.\"),\n    night: yup.number().positive(positive),\n    instrument: yup.number().positive(positive),\n    simulated_instrument: yup.number().positive(positive),\n    remarks: yup.string().max(256, \"256 Character Maximum\"),\n    number: yup.number().positive(positive)\n  });\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.select({\n      android: undefined,\n      ios: \"position\"\n    }),\n    keyboardVerticalOffset: Platform.select({\n      ios: 90,\n      android: 78\n    }),\n    enabled: scrollEnabled\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Formik, {\n    validateOnMount: true,\n    initialValues: initialValues,\n    validationSchema: flightSchema,\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      setTimeout(function () {\n        setSubmitting(false);\n        Context.setActivityVisible(true);\n      }, 400);\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        isValid = _ref3.isValid,\n        onSubmit = _ref3.onSubmit,\n        handleChange = _ref3.handleChange,\n        setFieldValue = _ref3.setFieldValue;\n    return React.createElement(React.Fragment, null, React.createElement(Pressable, {\n      onPress: function onPress() {\n        setCalVisible(true);\n      }\n    }, React.createElement(View, {\n      pointerEvents: \"none\"\n    }, React.createElement(AppTextInput, {\n      isValid: values.date.length > 1 ? true : false,\n      value: values.date.toString(),\n      onChangeText: handleChange(\"date\"),\n      placeholder: \"Date\"\n    }))), React.createElement(View, null, errors.date ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.date) : React.createElement(View, null)), React.createElement(AppTextInput, {\n      isValid: values.route.length > 1 ? true : false,\n      value: dashNotSpace(values.route),\n      onChangeText: handleChange(\"route\"),\n      placeholder: \"Route\",\n      autoCorrect: false,\n      autoCapitalize: \"characters\",\n      keyboardType: \"default\",\n      clearButtonMode: \"while-editing\",\n      onFocus: function onFocus() {\n        return setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        return setScrollEnabled(true);\n      }\n    }), React.createElement(View, null, errors.route ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.route) : React.createElement(View, null, React.createElement(AppText, null, \"Route - ATA or ICAO Airport codes\"))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AircraftPicker, {\n      initialValue: initialValues.aircraft_type,\n      isValid: values.aircraft_type ? true : false,\n      style: {\n        flex: 0.5\n      },\n      setFieldValue: setFieldValue,\n      handleAircraftId: handleAircraftId\n    }), React.createElement(View, null, errors.aircraft_type ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.aircraft_type) : React.createElement(View, null))), React.createElement(View, {\n      style: {\n        flex: 0.5\n      }\n    }, React.createElement(TailnumberPicker, {\n      initialValue: initialValues.registration,\n      isValid: values.registration ? true : false,\n      setFieldValue: setFieldValue,\n      filterBy: values.aircraft_type,\n      setAcTailMatch: setAcTailMatch,\n      aircraftId: aircraftId\n    }), React.createElement(View, null, errors.registration ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.registration) : React.createElement(View, null)))), React.createElement(AppTextInput, {\n      isValid: values.duration.length > 1 ? true : false,\n      value: values.duration,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"duration\", val);\n      },\n      placeholder: \"Duration - XX.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\",\n      onFocus: function onFocus() {\n        return setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        return setScrollEnabled(true);\n      }\n    }), React.createElement(View, null, errors.duration ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.duration) : React.createElement(View, null, React.createElement(AppText, null, \"Duration\"))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        paddingTop: 10,\n        justifyContent: \"space-between\"\n      }\n    }, React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"pilot_in_command\", !values.pilot_in_command);\n        setFieldValue(\"second_in_command\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.pilot_in_command\n    }), React.createElement(AppText, null, \"PIC\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"second_in_command\", !values.second_in_command);\n        setFieldValue(\"pilot_in_command\", false);\n        setFieldValue(\"solo\", false);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"instructor\", false);\n      },\n      isChecked: values.second_in_command\n    }), React.createElement(AppText, null, \"SIC\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"solo\", !values.solo);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"pilot_in_command\", false);\n        setFieldValue(\"second_in_command\", false);\n        setFieldValue(\"instructor\", false);\n        setFieldValue(\"simulator\", false);\n      },\n      isChecked: values.solo\n    }), React.createElement(AppText, null, \"Solo\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"dual\", !values.dual);\n        setFieldValue(\"solo\", false);\n        setFieldValue(\"instructor\", false);\n      },\n      isChecked: values.dual\n    }), React.createElement(AppText, null, \"Dual\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"instructor\", !values.instructor);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.instructor\n    }), React.createElement(AppText, null, \"CFI\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"simulator\", !values.simulator);\n        setFieldValue(\"cross_country\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.simulator\n    }), React.createElement(AppText, null, \"Sim\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"cross_country\", !values.cross_country);\n        setFieldValue(\"simulator\", false);\n      },\n      isChecked: values.cross_country\n    }), React.createElement(AppText, null, \"XC\"))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.landings_day.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"landings_day\", val);\n      },\n      placeholder: \"X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.landings_day ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.landings_day) : React.createElement(View, null, React.createElement(AppText, null, \"Day Landings\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.landings_night.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"landings_night\", val);\n      },\n      placeholder: \"X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.landings_night ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.landings_night) : React.createElement(View, null, React.createElement(AppText, null, \"Night Landings\"))))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.instrument.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"instrument\", val);\n      },\n      placeholder: \"X.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.instrument ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.instrument) : React.createElement(View, null, React.createElement(AppText, null, \"IFR\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.simulated_instrument.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"simulated_instrument\", val);\n      },\n      placeholder: \"X.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.simulated_instrument ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.simulated_instrument) : React.createElement(View, null, React.createElement(AppText, null, \"Hood\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5,\n        marginLeft: 10\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.night.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"night\", val);\n      },\n      placeholder: \"X.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.night ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.night) : React.createElement(View, null, React.createElement(AppText, null, \"Night\"))))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[0].approach_type\",\n      approachValue: values.approaches[0].approach_type,\n      numberKey: \"approaches[0].number\",\n      numberValue: values.approaches[0].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 0 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[0].approach_type\", \"\");\n        setFieldValue(\"approaches[0].number\", \"\");\n        setFormCount(0);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))), formCount > 0 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[1].approach_type\",\n      approachValue: values.approaches[1].approach_type,\n      numberKey: \"approaches[1].number\",\n      numberValue: values.approaches[1].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 1 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[1].approach_type\", \"\");\n        setFieldValue(\"approaches[1].number\", \"\");\n        setFormCount(0);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), formCount > 1 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[2].approach_type\",\n      approachValue: values.approaches[2].approach_type,\n      numberKey: \"approaches[2].number\",\n      numberValue: values.approaches[2].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 2 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[2].approach_type\", \"\");\n        setFieldValue(\"approaches[2].number\", \"\");\n        setFormCount(formCount - 1);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), formCount > 2 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[3].approach_type\",\n      approachValue: values.approaches[3].approach_type,\n      numberKey: \"approaches[3].number\",\n      numberValue: values.approaches[3].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 3 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[3].approach_type\", \"\");\n        setFieldValue(\"approaches[3].number\", \"\");\n        setFormCount(formCount - 1);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, formCount < 3 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setFormCount(formCount + 1);\n      }\n    }, React.createElement(Text, {\n      style: {\n        marginTop: 10,\n        color: \"green\"\n      }\n    }, \"Add approach\")) : React.createElement(View, {\n      style: {\n        paddingLeft: 125\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 10\n      }\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"hold\", !values.hold);\n      },\n      isChecked: values.hold\n    }), React.createElement(View, null, React.createElement(AppText, null, \"Hold\"))), React.createElement(AppTextInput, {\n      isValid: true,\n      style: {\n        paddingRight: 10,\n        paddingLeft: 10,\n        height: 80,\n        marginTop: 10,\n        borderWidth: 1,\n        borderRadius: STYLES.borderRadius,\n        borderColor: STYLES.grey\n      },\n      value: values.remarks,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"remarks\", val);\n      },\n      placeholder: \"Remarks\",\n      autoCorrect: false,\n      multiline: true\n    }), React.createElement(View, null, errors.remarks ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.remarks) : React.createElement(View, null)), isValid ? React.createElement(Button, {\n      title: !Context.setActivityVisible ? \"\" : \"Submit\",\n      onPress: function onPress() {\n        onSubmit;\n        method(values);\n        setSubmitting(true);\n        Context.setActivityVisible(true);\n      }\n    }) : React.createElement(Button, {\n      title: \"Complete required fields.\"\n    }), React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: calVisible\n    }, React.createElement(View, {\n      style: styles.centeredView\n    }, React.createElement(View, {\n      style: styles.modalView\n    }, React.createElement(CalendarPicker, {\n      selectedDayColor: \"lightblue\",\n      onDateChange: function onDateChange(date) {\n        setFieldValue(\"date\", date.format(\"M/D/YYYY\"));\n        setCalVisible(false);\n      }\n    })))));\n  }), React.createElement(ActivityModal, null))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  errors: {\n    color: STYLES.danger\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  checkboxContainer: {\n    flex: 0.1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  clearApproachType: {\n    marginLeft: 0,\n    marginRight: 10,\n    paddingTop: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default FlightForm;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/components/FlightForm.js"],"names":["React","useState","useContext","Formik","yup","CalendarPicker","AircraftPicker","AppTextInput","TailnumberPicker","ApproachPicker","AppText","Checkbox","ActivityModal","AppContext","STYLES","FlightForm","initialValues","method","calVisible","setCalVisible","aircraftId","setAircraftId","formCount","setFormCount","scrollEnabled","setScrollEnabled","acTailMatch","setAcTailMatch","submitting","setSubmitting","Context","handleAircraftId","id","dashNotSpace","str","replace","required","positive","flightSchema","object","shape","date","string","route","aircraft_type","registration","duration","number","min","max","landings_day","integer","landings_night","night","instrument","simulated_instrument","remarks","Platform","select","android","undefined","ios","styles","container","values","setTimeout","setActivityVisible","errors","isValid","onSubmit","handleChange","setFieldValue","length","toString","flexDirection","flex","marginRight","val","paddingTop","justifyContent","checkboxContainer","pilot_in_command","second_in_command","solo","dual","instructor","simulator","cross_country","marginLeft","approaches","approach_type","clearApproachType","marginTop","color","paddingLeft","hold","paddingRight","height","borderWidth","borderRadius","borderColor","grey","centeredView","modalView","format","StyleSheet","create","marginBottom","margin","backgroundColor","padding","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","danger","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Modal,\n  Pressable,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  Button,\n  ScrollView,\n} from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport AircraftPicker from \"./AircraftPicker\";\nimport AppTextInput from \"./AppTextInput\";\nimport TailnumberPicker from \"./TailnumberPicker\";\nimport ApproachPicker from \"./ApproachPicker\";\nimport AppText from \"./AppText\";\nimport Checkbox from \"./Checkbox\";\nimport ActivityModal from \"./ActivityModal\";\nimport AppContext from \"./AppContext\";\n\nimport { STYLES } from \"../styles/styles\";\n\nfunction FlightForm({ initialValues, method }) {\n  const [calVisible, setCalVisible] = useState(false);\n  const [aircraftId, setAircraftId] = useState(\"\");\n  const [formCount, setFormCount] = useState(0);\n  const [scrollEnabled, setScrollEnabled] = useState(true);\n  const [acTailMatch, setAcTailMatch] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  const Context = useContext(AppContext);\n\n  function handleAircraftId(id) {\n    if (aircraftId === id) {\n      setAcTailMatch(true);\n      return true;\n    } else {\n      setAcTailMatch(false);\n      setAircraftId(id);\n      return false;\n    }\n  }\n\n  const dashNotSpace = (str) => {\n    str = str.replace(/\\s/g, \"-\");\n    return str;\n  };\n\n  const required = \"*required\";\n  const positive = \"Must be positive number.\";\n\n  let flightSchema = yup.object().shape({\n    date: yup.string().required(required),\n    route: yup.string().required(required),\n    aircraft_type: yup.string().required(required),\n    registration: yup.string().required(required),\n    duration: yup\n      .number()\n      .positive(positive)\n      .required(required)\n      .min(0.1, \"Must be greater than 0.1\")\n      .max(30.0, \"Seems unlikely.\"),\n    landings_day: yup\n      .number()\n      .positive(positive)\n      .integer(\"Integers only, no decimals.\"),\n    landings_night: yup\n      .number()\n      .positive(positive)\n      .integer(\"Integers only, no decimals.\"),\n    night: yup.number().positive(positive),\n    instrument: yup.number().positive(positive),\n    simulated_instrument: yup.number().positive(positive),\n    remarks: yup.string().max(256, \"256 Character Maximum\"),\n    number: yup.number().positive(positive),\n  });\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.select({ android: undefined, ios: \"position\" })}\n      keyboardVerticalOffset={Platform.select({ ios: 90, android: 78 })}\n      enabled={scrollEnabled}\n    >\n      <ScrollView>\n        <View style={styles.container}>\n          <Formik\n            validateOnMount={true}\n            initialValues={initialValues}\n            validationSchema={flightSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                setSubmitting(false);\n                Context.setActivityVisible(true);\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              isValid,\n              onSubmit,\n              handleChange,\n              setFieldValue,\n            }) => (\n              <>\n                <Pressable\n                  onPress={() => {\n                    setCalVisible(true);\n                  }}\n                >\n                  <View pointerEvents='none'>\n                    <AppTextInput\n                      isValid={values.date.length > 1 ? true : false}\n                      value={values.date.toString()}\n                      onChangeText={handleChange(\"date\")}\n                      placeholder='Date'\n                    />\n                  </View>\n                </Pressable>\n\n                <View>\n                  {errors.date ? (\n                    <Text style={styles.errors}>{errors.date}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n\n                <AppTextInput\n                  isValid={values.route.length > 1 ? true : false}\n                  value={dashNotSpace(values.route)}\n                  onChangeText={handleChange(\"route\")}\n                  placeholder='Route'\n                  autoCorrect={false}\n                  autoCapitalize={\"characters\"}\n                  keyboardType={\"default\"}\n                  clearButtonMode={\"while-editing\"}\n                  onFocus={() => setScrollEnabled(false)}\n                  onBlur={() => setScrollEnabled(true)}\n                />\n\n                <View>\n                  {errors.route ? (\n                    <Text style={styles.errors}>{errors.route}</Text>\n                  ) : (\n                    <View>\n                      <AppText>Route - ATA or ICAO Airport codes</AppText>\n                    </View>\n                  )}\n                </View>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <View style={{ flex: 0.5, marginRight: 10 }}>\n                    <AircraftPicker\n                      initialValue={initialValues.aircraft_type}\n                      isValid={values.aircraft_type ? true : false}\n                      style={{ flex: 0.5 }}\n                      setFieldValue={setFieldValue}\n                      handleAircraftId={handleAircraftId}\n                    ></AircraftPicker>\n                    <View>\n                      {errors.aircraft_type ? (\n                        <Text style={styles.errors}>\n                          {errors.aircraft_type}\n                        </Text>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flex: 0.5 }}>\n                    <TailnumberPicker\n                      initialValue={initialValues.registration}\n                      isValid={values.registration ? true : false}\n                      setFieldValue={setFieldValue}\n                      filterBy={values.aircraft_type}\n                      setAcTailMatch={setAcTailMatch}\n                      aircraftId={aircraftId}\n                    ></TailnumberPicker>\n\n                    <View>\n                      {errors.registration ? (\n                        <Text style={styles.errors}>{errors.registration}</Text>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n\n                    {/* <View>\n                      {acTailMatch === false ? (\n                        <Text style={styles.errors}>Registration mismatch</Text>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View> */}\n                  </View>\n                </View>\n\n                <AppTextInput\n                  isValid={values.duration.length > 1 ? true : false}\n                  value={values.duration}\n                  onChangeText={(val) => {\n                    setFieldValue(\"duration\", val); //function to return zero if blank\n                  }}\n                  placeholder='Duration - XX.X'\n                  autoCorrect={false}\n                  keyboardType={\"numeric\"}\n                  clearButtonMode={\"while-editing\"}\n                  onFocus={() => setScrollEnabled(false)}\n                  onBlur={() => setScrollEnabled(true)}\n                ></AppTextInput>\n\n                <View>\n                  {errors.duration ? (\n                    <Text style={styles.errors}>{errors.duration}</Text>\n                  ) : (\n                    <View>\n                      <AppText>Duration</AppText>\n                    </View>\n                  )}\n                </View>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    paddingTop: 10,\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\n                          \"pilot_in_command\",\n                          !values.pilot_in_command\n                        );\n                        setFieldValue(\"second_in_command\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.pilot_in_command}\n                    ></Checkbox>\n                    <AppText>PIC</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\n                          \"second_in_command\",\n                          !values.second_in_command\n                        );\n                        setFieldValue(\"pilot_in_command\", false);\n                        setFieldValue(\"solo\", false);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"instructor\", false);\n                      }}\n                      isChecked={values.second_in_command}\n                    ></Checkbox>\n                    <AppText>SIC</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"solo\", !values.solo);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"pilot_in_command\", false);\n                        setFieldValue(\"second_in_command\", false);\n                        setFieldValue(\"instructor\", false);\n                        setFieldValue(\"simulator\", false);\n                      }}\n                      isChecked={values.solo}\n                    ></Checkbox>\n                    <AppText>Solo</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"dual\", !values.dual);\n                        setFieldValue(\"solo\", false);\n                        setFieldValue(\"instructor\", false);\n                      }}\n                      isChecked={values.dual}\n                    ></Checkbox>\n                    <AppText>Dual</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"instructor\", !values.instructor);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.instructor}\n                    ></Checkbox>\n                    <AppText>CFI</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"simulator\", !values.simulator);\n                        setFieldValue(\"cross_country\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.simulator}\n                    ></Checkbox>\n                    <AppText>Sim</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"cross_country\", !values.cross_country);\n                        setFieldValue(\"simulator\", false);\n                      }}\n                      isChecked={values.cross_country}\n                    ></Checkbox>\n                    <AppText>XC</AppText>\n                  </View>\n                </View>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      flex: 0.5,\n                      marginRight: 10,\n                    }}\n                  >\n                    <AppTextInput\n                      isValid={true}\n                      value={values.landings_day.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"landings_day\", val);\n                      }}\n                      placeholder='X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                    <View>\n                      {errors.landings_day ? (\n                        <Text style={styles.errors}>{errors.landings_day}</Text>\n                      ) : (\n                        <View>\n                          <AppText>Day Landings</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flexDirection: \"column\", flex: 0.5 }}>\n                    <AppTextInput\n                      isValid={true}\n                      value={values.landings_night.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"landings_night\", val);\n                      }}\n                      placeholder='X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                    <View>\n                      {errors.landings_night ? (\n                        <Text style={styles.errors}>\n                          {errors.landings_night}\n                        </Text>\n                      ) : (\n                        <View>\n                          <AppText>Night Landings</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      flex: 0.5,\n                      marginRight: 10,\n                    }}\n                  >\n                    <AppTextInput\n                      isValid={true}\n                      value={values.instrument.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"instrument\", val);\n                      }}\n                      placeholder='X.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                    <View>\n                      {errors.instrument ? (\n                        <Text style={styles.errors}>{errors.instrument}</Text>\n                      ) : (\n                        <View>\n                          <AppText>IFR</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flexDirection: \"column\", flex: 0.5 }}>\n                    <AppTextInput\n                      isValid={true}\n                      value={values.simulated_instrument.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"simulated_instrument\", val);\n                      }}\n                      placeholder='X.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n\n                    <View>\n                      {errors.simulated_instrument ? (\n                        <Text style={styles.errors}>\n                          {errors.simulated_instrument}\n                        </Text>\n                      ) : (\n                        <View>\n                          <AppText>Hood</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      flex: 0.5,\n                      marginLeft: 10,\n                    }}\n                  >\n                    <AppTextInput\n                      isValid={true}\n                      value={values.night.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"night\", val);\n                      }}\n                      placeholder='X.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n\n                    <View>\n                      {errors.night ? (\n                        <Text style={styles.errors}>{errors.night}</Text>\n                      ) : (\n                        <View>\n                          <AppText>Night</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <ApproachPicker\n                    isValid={true}\n                    setFieldValue={setFieldValue}\n                    approachKey={\"approaches[0].approach_type\"}\n                    approachValue={values.approaches[0].approach_type}\n                    numberKey={\"approaches[0].number\"}\n                    numberValue={values.approaches[0].number}\n                  ></ApproachPicker>\n                  <View style={styles.clearApproachType}>\n                    {formCount == 0 ? (\n                      <TouchableOpacity\n                        onPress={() => {\n                          setFieldValue(\"approaches[0].approach_type\", \"\");\n                          setFieldValue(\"approaches[0].number\", \"\");\n                          setFormCount(0);\n                        }}\n                      >\n                        <AppText color='red'>Remove</AppText>\n                      </TouchableOpacity>\n                    ) : (\n                      <View></View>\n                    )}\n                  </View>\n                </View>\n\n                {formCount > 0 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      isValid={true}\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[1].approach_type\"}\n                      approachValue={values.approaches[1].approach_type}\n                      numberKey={\"approaches[1].number\"}\n                      numberValue={values.approaches[1].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 1 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[1].approach_type\", \"\");\n                            setFieldValue(\"approaches[1].number\", \"\");\n                            setFormCount(0);\n                          }}\n                        >\n                          <AppText color='red'>Remove</AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                {formCount > 1 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      isValid={true}\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[2].approach_type\"}\n                      approachValue={values.approaches[2].approach_type}\n                      numberKey={\"approaches[2].number\"}\n                      numberValue={values.approaches[2].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 2 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[2].approach_type\", \"\");\n                            setFieldValue(\"approaches[2].number\", \"\");\n                            setFormCount(formCount - 1);\n                          }}\n                        >\n                          <AppText color='red'>Remove</AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                {formCount > 2 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      isValid={true}\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[3].approach_type\"}\n                      approachValue={values.approaches[3].approach_type}\n                      numberKey={\"approaches[3].number\"}\n                      numberValue={values.approaches[3].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 3 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[3].approach_type\", \"\");\n                            setFieldValue(\"approaches[3].number\", \"\");\n                            setFormCount(formCount - 1);\n                          }}\n                        >\n                          <AppText color='red'>Remove</AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                <View style={{ flexDirection: \"row\" }}>\n                  {formCount < 3 ? (\n                    <TouchableOpacity\n                      onPress={() => setFormCount(formCount + 1)}\n                    >\n                      <Text style={{ marginTop: 10, color: \"green\" }}>\n                        Add approach\n                      </Text>\n                    </TouchableOpacity>\n                  ) : (\n                    <View style={{ paddingLeft: 125 }}></View>\n                  )}\n                </View>\n\n                <View style={{ flexDirection: \"row\", marginTop: 10 }}>\n                  <Checkbox\n                    onPress={() => {\n                      setFieldValue(\"hold\", !values.hold);\n                    }}\n                    isChecked={values.hold}\n                  ></Checkbox>\n                  <View>\n                    <AppText>Hold</AppText>\n                  </View>\n                </View>\n\n                <AppTextInput\n                  isValid={true}\n                  style={{\n                    paddingRight: 10,\n                    paddingLeft: 10,\n                    height: 80,\n                    marginTop: 10,\n                    borderWidth: 1,\n                    borderRadius: STYLES.borderRadius,\n                    borderColor: STYLES.grey,\n                  }}\n                  value={values.remarks}\n                  onChangeText={(val) => {\n                    setFieldValue(\"remarks\", val);\n                  }}\n                  placeholder='Remarks'\n                  autoCorrect={false}\n                  multiline={true}\n                ></AppTextInput>\n\n                <View>\n                  {errors.remarks ? (\n                    <Text style={styles.errors}>{errors.remarks}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n\n                {isValid ? (\n                  <Button\n                    title={!Context.setActivityVisible ? \"\" : \"Submit\"}\n                    onPress={() => {\n                      onSubmit;\n                      method(values);\n                      setSubmitting(true);\n                      Context.setActivityVisible(true);\n                    }}\n                  ></Button>\n                ) : (\n                  <Button title='Complete required fields.'></Button>\n                )}\n\n                {/* <View style={{ marginTop: 30 }}>\n                  <Text>{JSON.stringify(values, null, \"  \")}</Text>\n                </View> */}\n\n                <Modal\n                  animationType='slide'\n                  transparent={true}\n                  visible={calVisible}\n                >\n                  <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                      <CalendarPicker\n                        selectedDayColor='lightblue'\n                        onDateChange={(date) => {\n                          setFieldValue(\"date\", date.format(\"M/D/YYYY\"));\n                          setCalVisible(false);\n                        }}\n                      />\n                    </View>\n                  </View>\n                </Modal>\n              </>\n            )}\n          </Formik>\n          <ActivityModal></ActivityModal>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20,\n  },\n\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  errors: {\n    color: STYLES.danger,\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n\n  checkboxContainer: {\n    flex: 0.1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n\n  clearApproachType: {\n    marginLeft: 0,\n    marginRight: 10,\n    paddingTop: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default FlightForm;\n"]},"metadata":{},"sourceType":"module"}