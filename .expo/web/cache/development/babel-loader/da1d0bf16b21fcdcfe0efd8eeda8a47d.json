{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/blake/react_native/d2lb/app/screens/FlightCreateScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik, validateYupSchema } from \"formik\";\nimport * as yup from \"yup\";\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport AircraftPicker from \"../components/AircraftPicker\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport TailPicker from \"../components/TailPicker\";\nimport ApproachPicker from \"../components/ApproachPicker\";\nimport AppText from \"../components/AppText\";\nimport Checkbox from \"../components/Checkbox\";\nimport { STYLES } from \"../styles/styles\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport api from \"../api/axiosConfig\";\n\nfunction FlightCreateScreen(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      aircraftId = _useState4[0],\n      setAircraftId = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formCount = _useState6[0],\n      setFormCount = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      scrollEnabled = _useState8[0],\n      setScrollEnabled = _useState8[1];\n\n  var _useState9 = useState([\"\", \"\"]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      acTailPair = _useState10[0],\n      setAcTailPair = _useState10[1];\n\n  function handleAircraftId(id) {\n    setAircraftId(id);\n  }\n\n  var submit = function submit(values) {\n    var result;\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.post(\"/api/flights/\", {\n              values: values\n            }).then(function (response) {\n              console.log(response);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(values);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dashNotSpace = function dashNotSpace(str) {\n    str = str.replace(/\\s/g, \"-\");\n    return str;\n  };\n\n  var required = \"*required\";\n  var schema = yup.object().shape({\n    date: yup.string().required(required),\n    route: yup.string().required(required),\n    aircraft: yup.string().required(required),\n    tailnumber: yup.string().required(required),\n    duration: yup.number().required(required).min(0.1, \"Must be greater than 0.1\").max(30.0, \"Seems unlikely.\"),\n    remarks: yup.string().max(256, \"256 Character Maximum\")\n  });\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.select({\n      android: undefined,\n      ios: \"position\"\n    }),\n    keyboardVerticalOffset: Platform.select({\n      ios: 90,\n      android: 78\n    }),\n    enabled: scrollEnabled\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Formik, {\n    initialValues: {\n      date: \"\",\n      route: \"\",\n      aircraft: \"\",\n      tailnumber: \"\",\n      duration: \"\",\n      pilot_in_command: false,\n      second_in_command: false,\n      solo: false,\n      dual: false,\n      instructor: false,\n      simulator: false,\n      cross_country: false,\n      landings_day: \"\",\n      landings_night: \"\",\n      instrument: \"\",\n      simulated_instrument: \"\",\n      approaches: [{\n        approach_type: \"\",\n        number: \"\"\n      }, {\n        approach_type: \"\",\n        number: \"\"\n      }, {\n        approach_type: \"\",\n        number: \"\"\n      }, {\n        approach_type: \"\",\n        number: \"\"\n      }],\n      remarks: \"\"\n    },\n    validationSchema: schema\n  }, function (_ref) {\n    var values = _ref.values,\n        handleChange = _ref.handleChange,\n        setFieldValue = _ref.setFieldValue,\n        errors = _ref.errors;\n    return React.createElement(React.Fragment, null, React.createElement(Pressable, {\n      onPress: function onPress() {\n        setVisible(true);\n      }\n    }, React.createElement(View, {\n      pointerEvents: \"none\"\n    }, React.createElement(AppTextInput, {\n      value: values.date.toString(),\n      onChangeText: handleChange(\"date\"),\n      placeholder: \"Date\"\n    }))), React.createElement(View, null, errors.date ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.date) : React.createElement(View, null)), React.createElement(AppTextInput, {\n      onFocus: function onFocus() {\n        setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        setScrollEnabled(true);\n      },\n      value: dashNotSpace(values.route),\n      onChangeText: handleChange(\"route\"),\n      placeholder: \"Route\",\n      autoCorrect: false,\n      autoCapitalize: \"characters\",\n      keyboardType: \"default\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.route ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.route) : React.createElement(View, null)), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AircraftPicker, {\n      style: {\n        flex: 0.5\n      },\n      value: values.aircraft,\n      onChangeText: handleChange(\"aircraft\"),\n      setFieldValue: setFieldValue,\n      handleAircraftId: handleAircraftId\n    }), React.createElement(View, null, errors.aircraft ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.aircraft) : React.createElement(View, null))), React.createElement(View, {\n      style: {\n        flex: 0.5\n      }\n    }, aircraftId ? React.createElement(TailPicker, {\n      value: values.tailnumber,\n      onChangeText: handleChange(\"tailnumber\"),\n      setFieldValue: setFieldValue,\n      filterBy: values.aircraft,\n      aircraftId: aircraftId\n    }) : React.createElement(View, null, React.createElement(AppTextInput, {\n      placeholder: \"Aircraft choice required.\",\n      editable: false\n    })), React.createElement(View, null, errors.tailnumber ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.tailnumber) : React.createElement(View, null)))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.7\n      }\n    }, React.createElement(AppTextInput, {\n      onFocus: function onFocus() {\n        setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        setScrollEnabled(true);\n      },\n      value: values.duration.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"duration\", parseFloat(val));\n      },\n      placeholder: \"Duration - XX.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    })), React.createElement(View, {\n      style: {\n        flex: 0.3,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }\n    }, React.createElement(AppText, null, \"Duration\"))), React.createElement(View, null, errors.duration ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.duration) : React.createElement(View, null)), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        paddingTop: 10,\n        justifyContent: \"space-between\"\n      }\n    }, React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"pilot_in_command\", !values.pilot_in_command);\n        setFieldValue(\"second_in_command\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.pilot_in_command\n    }), React.createElement(AppText, null, \"PIC\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"second_in_command\", !values.second_in_command);\n        setFieldValue(\"pilot_in_command\", false);\n        setFieldValue(\"solo\", false);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"instructor\", false);\n      },\n      isChecked: values.second_in_command\n    }), React.createElement(AppText, null, \"SIC\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"solo\", !values.solo);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"pilot_in_command\", false);\n        setFieldValue(\"second_in_command\", false);\n        setFieldValue(\"instructor\", false);\n        setFieldValue(\"simulator\", false);\n      },\n      isChecked: values.solo\n    }), React.createElement(AppText, null, \"Solo\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"dual\", !values.dual);\n        setFieldValue(\"solo\", false);\n        setFieldValue(\"instructor\", false);\n      },\n      isChecked: values.dual\n    }), React.createElement(AppText, null, \"Dual\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"instructor\", !values.instructor);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.instructor\n    }), React.createElement(AppText, null, \"CFI\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"simulator\", !values.simulator);\n        setFieldValue(\"cross_country\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.simulator\n    }), React.createElement(AppText, null, \"Sim\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"cross_country\", !values.cross_country);\n        setFieldValue(\"simulator\", false);\n      },\n      isChecked: values.cross_country\n    }), React.createElement(AppText, null, \"XC\"))), React.createElement(AppTextInput, {\n      value: values.landings_day,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"landings_day\", parseInt(val));\n      },\n      placeholder: \"Day Landings\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(AppTextInput, {\n      value: values.landings_night,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"landings_night\", parseInt(val));\n      },\n      placeholder: \"Night Landings\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(AppTextInput, {\n      value: values.instrument,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"instrument\", parseFloat(val));\n      },\n      placeholder: \"IFR\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(AppTextInput, {\n      value: values.simulated_instrument,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"simulated_instrument\", parseFloat(val));\n      },\n      placeholder: \"Simulated IFR\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[0].approach_type\",\n      approachValue: values.approaches[0].approach_type,\n      numberKey: \"approaches[0].number\",\n      numberValue: values.approaches[0].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 0 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[0].approach_type\", \"\");\n        setFieldValue(\"approaches[0].number\", \"\");\n        setFormCount(0);\n      }\n    }, React.createElement(AppText, {\n      style: {\n        color: STYLES.red\n      }\n    }, \"Remove\")) : React.createElement(View, null))), formCount > 0 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[1].approach_type\",\n      approachValue: values.approaches[1].approach_type,\n      numberKey: \"approaches[1].number\",\n      numberValue: values.approaches[1].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 1 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[1].approach_type\", \"\");\n        setFieldValue(\"approaches[1].number\", \"\");\n        setFormCount(0);\n      }\n    }, React.createElement(AppText, {\n      style: {\n        color: STYLES.red\n      }\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), formCount > 1 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[2].approach_type\",\n      approachValue: values.approaches[2].approach_type,\n      numberKey: \"approaches[2].number\",\n      numberValue: values.approaches[2].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 2 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[2].approach_type\", \"\");\n        setFieldValue(\"approaches[2].number\", \"\");\n        setFormCount(formCount - 1);\n      }\n    }, React.createElement(AppText, {\n      style: {\n        color: STYLES.red\n      }\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), formCount > 2 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[3].approach_type\",\n      approachValue: values.approaches[3].approach_type,\n      numberKey: \"approaches[3].number\",\n      numberValue: values.approaches[3].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 3 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[3].approach_type\", \"\");\n        setFieldValue(\"approaches[3].number\", \"\");\n        setFormCount(formCount - 1);\n      }\n    }, React.createElement(AppText, {\n      style: {\n        color: STYLES.red\n      }\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, formCount < 3 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setFormCount(formCount + 1);\n      }\n    }, React.createElement(AppText, {\n      style: {\n        color: STYLES.green,\n        marginRight: 35,\n        marginTop: 10\n      }\n    }, \"Add approach\")) : React.createElement(View, {\n      style: {\n        paddingLeft: 125\n      }\n    })), React.createElement(AppTextInput, {\n      style: {\n        paddingRight: 10,\n        paddingLeft: 10,\n        height: 80,\n        marginTop: 10,\n        borderWidth: 1,\n        borderRadius: STYLES.borderRadius,\n        borderColor: STYLES.grey\n      },\n      value: values.remarks,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"remarks\", val);\n      },\n      placeholder: \"Remarks\",\n      autoCorrect: false,\n      multiline: true\n    }), React.createElement(View, null, errors.remarks ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.remarks) : React.createElement(View, null)), React.createElement(View, {\n      style: {\n        paddingTop: 20\n      }\n    }, React.createElement(Button, {\n      title: \"Submit\",\n      onPress: function onPress() {\n        return submit(values);\n      }\n    })), React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: visible\n    }, React.createElement(View, {\n      style: styles.centeredView\n    }, React.createElement(View, {\n      style: styles.modalView\n    }, React.createElement(CalendarPicker, {\n      selectedDayColor: \"lightblue\",\n      onDateChange: function onDateChange(date) {\n        setFieldValue(\"date\", date.format(\"M-D-YYYY\"));\n        setVisible(false);\n      }\n    })))));\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    paddingTop: 50,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  errors: {\n    color: STYLES.danger\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  checkboxContainer: {\n    flex: 0.1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  clearApproachType: {\n    marginLeft: 0,\n    marginRight: 10,\n    paddingTop: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default FlightCreateScreen;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/screens/FlightCreateScreen.js"],"names":["React","useState","Formik","validateYupSchema","yup","CalendarPicker","AircraftPicker","AppTextInput","TailPicker","ApproachPicker","AppText","Checkbox","STYLES","ScrollView","api","FlightCreateScreen","props","visible","setVisible","aircraftId","setAircraftId","formCount","setFormCount","scrollEnabled","setScrollEnabled","acTailPair","setAcTailPair","handleAircraftId","id","submit","values","post","then","response","console","log","catch","error","result","dashNotSpace","str","replace","required","schema","object","shape","date","string","route","aircraft","tailnumber","duration","number","min","max","remarks","Platform","select","android","undefined","ios","styles","container","pilot_in_command","second_in_command","solo","dual","instructor","simulator","cross_country","landings_day","landings_night","instrument","simulated_instrument","approaches","approach_type","handleChange","setFieldValue","errors","toString","flexDirection","flex","marginRight","val","parseFloat","justifyContent","alignItems","paddingTop","checkboxContainer","parseInt","clearApproachType","color","red","green","marginTop","paddingLeft","paddingRight","height","borderWidth","borderRadius","borderColor","grey","centeredView","modalView","format","StyleSheet","create","marginBottom","margin","backgroundColor","padding","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","danger","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Modal,\n  Pressable,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  Button,\n} from \"react-native\";\nimport { Formik, validateYupSchema } from \"formik\";\nimport * as yup from \"yup\";\n\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport AircraftPicker from \"../components/AircraftPicker\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport TailPicker from \"../components/TailPicker\";\nimport ApproachPicker from \"../components/ApproachPicker\";\nimport AppText from \"../components/AppText\";\nimport Checkbox from \"../components/Checkbox\";\n\nimport { STYLES } from \"../styles/styles\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport api from \"../api/axiosConfig\";\n\nfunction FlightCreateScreen(props) {\n  const [visible, setVisible] = useState(false);\n  const [aircraftId, setAircraftId] = useState(\"\");\n  const [formCount, setFormCount] = useState(0);\n  const [scrollEnabled, setScrollEnabled] = useState(false);\n\n  const [acTailPair, setAcTailPair] = useState([\"\", \"\"]);\n\n  function handleAircraftId(id) {\n    setAircraftId(id);\n  }\n\n  const submit = async (values) => {\n    const result = await api\n      .post(\"/api/flights/\", { values })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    console.log(values);\n  };\n\n  const dashNotSpace = (str) => {\n    str = str.replace(/\\s/g, \"-\");\n    return str;\n  };\n\n  const required = \"*required\";\n\n  let schema = yup.object().shape({\n    date: yup.string().required(required),\n    route: yup.string().required(required),\n    aircraft: yup.string().required(required),\n    tailnumber: yup.string().required(required),\n    duration: yup\n      .number()\n      .required(required)\n      .min(0.1, \"Must be greater than 0.1\")\n      .max(30.0, \"Seems unlikely.\"),\n    remarks: yup.string().max(256, \"256 Character Maximum\"),\n  });\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.select({ android: undefined, ios: \"position\" })}\n      keyboardVerticalOffset={Platform.select({ ios: 90, android: 78 })}\n      enabled={scrollEnabled}\n    >\n      <ScrollView>\n        <View style={styles.container}>\n          <Formik\n            initialValues={{\n              date: \"\",\n              route: \"\",\n              aircraft: \"\",\n              tailnumber: \"\",\n              duration: \"\",\n              pilot_in_command: false,\n              second_in_command: false,\n              solo: false,\n              dual: false,\n              instructor: false,\n              simulator: false,\n              cross_country: false,\n              landings_day: \"\",\n              landings_night: \"\",\n              instrument: \"\",\n              simulated_instrument: \"\",\n              approaches: [\n                { approach_type: \"\", number: \"\" },\n                { approach_type: \"\", number: \"\" },\n                { approach_type: \"\", number: \"\" },\n                { approach_type: \"\", number: \"\" },\n              ],\n              remarks: \"\",\n            }}\n            validationSchema={schema}\n          >\n            {({ values, handleChange, setFieldValue, errors }) => (\n              <>\n                <Pressable\n                  onPress={() => {\n                    setVisible(true);\n                  }}\n                >\n                  <View pointerEvents='none'>\n                    <AppTextInput\n                      value={values.date.toString()}\n                      onChangeText={handleChange(\"date\")}\n                      placeholder='Date'\n                    />\n                  </View>\n                </Pressable>\n\n                <View>\n                  {errors.date ? (\n                    <Text style={styles.errors}>{errors.date}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n\n                <AppTextInput\n                  onFocus={() => {\n                    setScrollEnabled(false);\n                  }}\n                  onBlur={() => {\n                    setScrollEnabled(true);\n                  }}\n                  value={dashNotSpace(values.route)}\n                  onChangeText={handleChange(\"route\")}\n                  placeholder='Route'\n                  autoCorrect={false}\n                  autoCapitalize={\"characters\"}\n                  keyboardType={\"default\"}\n                  clearButtonMode={\"while-editing\"}\n                />\n\n                <View>\n                  {errors.route ? (\n                    <Text style={styles.errors}>{errors.route}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <View style={{ flex: 0.5, marginRight: 10 }}>\n                    <AircraftPicker\n                      style={{ flex: 0.5 }}\n                      value={values.aircraft}\n                      onChangeText={handleChange(\"aircraft\")}\n                      setFieldValue={setFieldValue}\n                      handleAircraftId={handleAircraftId}\n                    ></AircraftPicker>\n                    <View>\n                      {errors.aircraft ? (\n                        <Text style={styles.errors}>{errors.aircraft}</Text>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flex: 0.5 }}>\n                    {aircraftId ? (\n                      <TailPicker\n                        value={values.tailnumber}\n                        onChangeText={handleChange(\"tailnumber\")}\n                        setFieldValue={setFieldValue}\n                        filterBy={values.aircraft}\n                        aircraftId={aircraftId}\n                      ></TailPicker>\n                    ) : (\n                      <View>\n                        <AppTextInput\n                          placeholder={\"Aircraft choice required.\"}\n                          editable={false}\n                        ></AppTextInput>\n                      </View>\n                    )}\n                    <View>\n                      {errors.tailnumber ? (\n                        <Text style={styles.errors}>{errors.tailnumber}</Text>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                </View>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <View style={{ flex: 0.7 }}>\n                    <AppTextInput\n                      onFocus={() => {\n                        setScrollEnabled(false);\n                      }}\n                      onBlur={() => {\n                        setScrollEnabled(true);\n                      }}\n                      value={values.duration.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"duration\", parseFloat(val));\n                      }}\n                      placeholder='Duration - XX.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                  </View>\n                  <View\n                    style={{\n                      flex: 0.3,\n                      flexDirection: \"column\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <AppText>Duration</AppText>\n                  </View>\n                </View>\n\n                <View>\n                  {errors.duration ? (\n                    <Text style={styles.errors}>{errors.duration}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    paddingTop: 10,\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\n                          \"pilot_in_command\",\n                          !values.pilot_in_command\n                        );\n                        setFieldValue(\"second_in_command\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.pilot_in_command}\n                    ></Checkbox>\n                    <AppText>PIC</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\n                          \"second_in_command\",\n                          !values.second_in_command\n                        );\n                        setFieldValue(\"pilot_in_command\", false);\n                        setFieldValue(\"solo\", false);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"instructor\", false);\n                      }}\n                      isChecked={values.second_in_command}\n                    ></Checkbox>\n                    <AppText>SIC</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"solo\", !values.solo);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"pilot_in_command\", false);\n                        setFieldValue(\"second_in_command\", false);\n                        setFieldValue(\"instructor\", false);\n                        setFieldValue(\"simulator\", false);\n                      }}\n                      isChecked={values.solo}\n                    ></Checkbox>\n                    <AppText>Solo</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"dual\", !values.dual);\n                        setFieldValue(\"solo\", false);\n                        setFieldValue(\"instructor\", false);\n                      }}\n                      isChecked={values.dual}\n                    ></Checkbox>\n                    <AppText>Dual</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"instructor\", !values.instructor);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.instructor}\n                    ></Checkbox>\n                    <AppText>CFI</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"simulator\", !values.simulator);\n                        setFieldValue(\"cross_country\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.simulator}\n                    ></Checkbox>\n                    <AppText>Sim</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"cross_country\", !values.cross_country);\n                        setFieldValue(\"simulator\", false);\n                      }}\n                      isChecked={values.cross_country}\n                    ></Checkbox>\n                    <AppText>XC</AppText>\n                  </View>\n                </View>\n\n                <AppTextInput\n                  value={values.landings_day}\n                  onChangeText={(val) => {\n                    setFieldValue(\"landings_day\", parseInt(val));\n                  }}\n                  placeholder='Day Landings'\n                  autoCorrect={false}\n                  keyboardType={\"numeric\"}\n                  clearButtonMode={\"while-editing\"}\n                ></AppTextInput>\n\n                <AppTextInput\n                  value={values.landings_night}\n                  onChangeText={(val) => {\n                    setFieldValue(\"landings_night\", parseInt(val));\n                  }}\n                  placeholder='Night Landings'\n                  autoCorrect={false}\n                  keyboardType={\"numeric\"}\n                  clearButtonMode={\"while-editing\"}\n                ></AppTextInput>\n\n                <AppTextInput\n                  value={values.instrument}\n                  onChangeText={(val) => {\n                    setFieldValue(\"instrument\", parseFloat(val));\n                  }}\n                  placeholder='IFR'\n                  autoCorrect={false}\n                  keyboardType={\"numeric\"}\n                  clearButtonMode={\"while-editing\"}\n                ></AppTextInput>\n\n                <AppTextInput\n                  value={values.simulated_instrument}\n                  onChangeText={(val) => {\n                    setFieldValue(\"simulated_instrument\", parseFloat(val));\n                  }}\n                  placeholder='Simulated IFR'\n                  autoCorrect={false}\n                  keyboardType={\"numeric\"}\n                  clearButtonMode={\"while-editing\"}\n                ></AppTextInput>\n\n                <View style={{ flexDirection: \"row\" }}>\n                  <ApproachPicker\n                    setFieldValue={setFieldValue}\n                    approachKey={\"approaches[0].approach_type\"}\n                    approachValue={values.approaches[0].approach_type}\n                    numberKey={\"approaches[0].number\"}\n                    numberValue={values.approaches[0].number}\n                  ></ApproachPicker>\n                  <View style={styles.clearApproachType}>\n                    {formCount == 0 ? (\n                      <TouchableOpacity\n                        onPress={() => {\n                          setFieldValue(\"approaches[0].approach_type\", \"\");\n                          setFieldValue(\"approaches[0].number\", \"\");\n                          setFormCount(0);\n                        }}\n                      >\n                        <AppText\n                          style={{\n                            color: STYLES.red,\n                          }}\n                        >\n                          Remove\n                        </AppText>\n                      </TouchableOpacity>\n                    ) : (\n                      <View></View>\n                    )}\n                  </View>\n                </View>\n\n                {formCount > 0 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[1].approach_type\"}\n                      approachValue={values.approaches[1].approach_type}\n                      numberKey={\"approaches[1].number\"}\n                      numberValue={values.approaches[1].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 1 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[1].approach_type\", \"\");\n                            setFieldValue(\"approaches[1].number\", \"\");\n                            setFormCount(0);\n                          }}\n                        >\n                          <AppText\n                            style={{\n                              color: STYLES.red,\n                            }}\n                          >\n                            Remove\n                          </AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                {formCount > 1 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[2].approach_type\"}\n                      approachValue={values.approaches[2].approach_type}\n                      numberKey={\"approaches[2].number\"}\n                      numberValue={values.approaches[2].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 2 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[2].approach_type\", \"\");\n                            setFieldValue(\"approaches[2].number\", \"\");\n                            setFormCount(formCount - 1);\n                          }}\n                        >\n                          <AppText\n                            style={{\n                              color: STYLES.red,\n                            }}\n                          >\n                            Remove\n                          </AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                {formCount > 2 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[3].approach_type\"}\n                      approachValue={values.approaches[3].approach_type}\n                      numberKey={\"approaches[3].number\"}\n                      numberValue={values.approaches[3].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 3 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[3].approach_type\", \"\");\n                            setFieldValue(\"approaches[3].number\", \"\");\n                            setFormCount(formCount - 1);\n                          }}\n                        >\n                          <AppText\n                            style={{\n                              color: STYLES.red,\n                            }}\n                          >\n                            Remove\n                          </AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                <View style={{ flexDirection: \"row\" }}>\n                  {formCount < 3 ? (\n                    <TouchableOpacity\n                      onPress={() => setFormCount(formCount + 1)}\n                    >\n                      <AppText\n                        style={{\n                          color: STYLES.green,\n                          marginRight: 35,\n                          marginTop: 10,\n                        }}\n                      >\n                        Add approach\n                      </AppText>\n                    </TouchableOpacity>\n                  ) : (\n                    <View style={{ paddingLeft: 125 }}></View>\n                  )}\n                </View>\n\n                <AppTextInput\n                  style={{\n                    paddingRight: 10,\n                    paddingLeft: 10,\n                    height: 80,\n                    marginTop: 10,\n                    borderWidth: 1,\n                    borderRadius: STYLES.borderRadius,\n                    borderColor: STYLES.grey,\n                  }}\n                  value={values.remarks}\n                  onChangeText={(val) => {\n                    setFieldValue(\"remarks\", val);\n                  }}\n                  placeholder='Remarks'\n                  autoCorrect={false}\n                  multiline={true}\n                ></AppTextInput>\n\n                <View>\n                  {errors.remarks ? (\n                    <Text style={styles.errors}>{errors.remarks}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n\n                <View style={{ paddingTop: 20 }}>\n                  <Button\n                    title='Submit'\n                    onPress={() => submit(values)}\n                  ></Button>\n                </View>\n\n                {/* <View style={{ marginTop: 30 }}>\n                <Text>{JSON.stringify(values, null, \"  \")}</Text>\n              </View> */}\n\n                <Modal\n                  animationType='slide'\n                  transparent={true}\n                  visible={visible}\n                >\n                  <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                      <CalendarPicker\n                        selectedDayColor='lightblue'\n                        onDateChange={(date) => {\n                          setFieldValue(\"date\", date.format(\"M-D-YYYY\"));\n                          setVisible(false);\n                        }}\n                      />\n                    </View>\n                  </View>\n                </Modal>\n              </>\n            )}\n          </Formik>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    paddingTop: 50,\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20,\n  },\n\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  errors: {\n    color: STYLES.danger,\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n\n  checkboxContainer: {\n    flex: 0.1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n\n  clearApproachType: {\n    marginLeft: 0,\n    marginRight: 10,\n    paddingTop: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default FlightCreateScreen;\n"]},"metadata":{},"sourceType":"module"}