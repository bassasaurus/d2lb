{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AppTextInput from \"./AppTextInput\";\nimport { STYLES } from \"../styles/styles\";\nimport FlatListItemSeparator from \"./FlatListItemSeparator\";\n\nfunction ApproachPicker(_ref) {\n  var setFieldValue = _ref.setFieldValue,\n      approachKey = _ref.approachKey,\n      approachValue = _ref.approachValue,\n      numberKey = _ref.numberKey,\n      numberValue = _ref.numberValue;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var approachChoices = [{\n    id: 0,\n    approach: \"ILS\"\n  }, {\n    id: 2,\n    approach: \"CAT II\"\n  }, {\n    id: 3,\n    approach: \"CAT III\"\n  }, {\n    id: 4,\n    approach: \"GPS\"\n  }, {\n    id: 5,\n    approach: \"RNAV\"\n  }, {\n    id: 6,\n    approach: \"LOC\"\n  }, {\n    id: 7,\n    approach: \"VOR\"\n  }, {\n    id: 8,\n    approach: \"NDB\"\n  }, {\n    id: 9,\n    approach: \"LOC BC\"\n  }, {\n    id: 10,\n    approach: \"SDF\"\n  }, {\n    id: 11,\n    approach: \"LDA\"\n  }, {\n    id: 12,\n    approach: \"TACAN\"\n  }, {\n    id: 13,\n    approach: \"MLS\"\n  }];\n\n  var fetchData = function fetchData() {\n    setData(approachChoices);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setVisible(false);\n        setFieldValue(approachKey, item.approach);\n      }\n    }, React.createElement(Text, {\n      style: styles.listItem\n    }, item.approach)));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingRight: 10\n    }\n  }, React.createElement(Pressable, {\n    onPress: function onPress() {\n      fetchData();\n      setVisible(true);\n    }\n  }, React.createElement(View, {\n    pointerEvents: \"none\"\n  }, React.createElement(AppTextInput, {\n    isValid: true,\n    width: 150,\n    value: approachValue,\n    placeholder: \"Approach Type\"\n  })))), React.createElement(AppTextInput, {\n    isValid: true,\n    width: 80,\n    placeholder: \"X\",\n    keyboardType: \"numeric\",\n    clearButtonMode: \"always\",\n    value: numberValue.toString(),\n    onChangeText: function onChangeText(val) {\n      return setFieldValue(numberKey, val);\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"flex-end\"\n    }\n  }))), React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: FlatListItemSeparator\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  container: {},\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  listItem: {\n    fontFamily: STYLES.font,\n    fontSize: 20,\n    color: STYLES.blue,\n    marginTop: 20\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 0\n  }\n});\nexport default ApproachPicker;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/components/ApproachPicker.js"],"names":["React","useState","AppTextInput","STYLES","FlatListItemSeparator","ApproachPicker","setFieldValue","approachKey","approachValue","numberKey","numberValue","visible","setVisible","data","setData","approachChoices","id","approach","fetchData","renderItem","item","styles","container","listItem","flexDirection","paddingRight","toString","val","alignItems","centeredView","modalView","StyleSheet","create","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontFamily","font","fontSize","color","blue","marginTop","flex","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Modal,\n  Text,\n  FlatList,\n  Pressable,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport AppTextInput from \"./AppTextInput\";\n\nimport { STYLES } from \"../styles/styles\";\nimport FlatListItemSeparator from \"./FlatListItemSeparator\";\n\nfunction ApproachPicker({\n  setFieldValue,\n  approachKey,\n  approachValue,\n  numberKey,\n  numberValue,\n}) {\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const approachChoices = [\n    {\n      id: 0,\n      approach: \"ILS\",\n    },\n    {\n      id: 2,\n      approach: \"CAT II\",\n    },\n    {\n      id: 3,\n      approach: \"CAT III\",\n    },\n    {\n      id: 4,\n      approach: \"GPS\",\n    },\n    {\n      id: 5,\n      approach: \"RNAV\",\n    },\n    {\n      id: 6,\n      approach: \"LOC\",\n    },\n    {\n      id: 7,\n      approach: \"VOR\",\n    },\n    {\n      id: 8,\n      approach: \"NDB\",\n    },\n    {\n      id: 9,\n      approach: \"LOC BC\",\n    },\n    {\n      id: 10,\n      approach: \"SDF\",\n    },\n    {\n      id: 11,\n      approach: \"LDA\",\n    },\n    {\n      id: 12,\n      approach: \"TACAN\",\n    },\n    {\n      id: 13,\n      approach: \"MLS\",\n    },\n  ];\n\n  const fetchData = () => {\n    setData(approachChoices);\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => {\n          setVisible(false);\n          setFieldValue(approachKey, item.approach);\n        }}\n      >\n        <Text style={styles.listItem}>{item.approach}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <>\n      <View style={{ flexDirection: \"row\" }}>\n        <View style={{ paddingRight: 10 }}>\n          <Pressable\n            onPress={() => {\n              fetchData();\n              setVisible(true);\n            }}\n          >\n            <View pointerEvents={\"none\"}>\n              <AppTextInput\n                isValid={true}\n                width={150}\n                value={approachValue}\n                placeholder={\"Approach Type\"}\n              ></AppTextInput>\n            </View>\n          </Pressable>\n        </View>\n\n        <AppTextInput\n          isValid={true}\n          width={80}\n          placeholder='X'\n          keyboardType='numeric'\n          clearButtonMode={\"always\"}\n          value={numberValue.toString()}\n          onChangeText={(val) => setFieldValue(numberKey, val)}\n        ></AppTextInput>\n\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"flex-end\",\n            }}\n          ></View>\n        </View>\n      </View>\n      <View style={styles.centeredView}>\n        <Modal animationType='slide' transparent={true} visible={visible}>\n          <View style={styles.modalView}>\n            <FlatList\n              data={data}\n              renderItem={renderItem}\n              keyExtractor={(item) => item.id.toString()}\n              ItemSeparatorComponent={FlatListItemSeparator}\n            />\n          </View>\n        </Modal>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  listItem: {\n    fontFamily: STYLES.font,\n    fontSize: 20,\n    color: STYLES.blue,\n    marginTop: 20,\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 0,\n  },\n});\n\nexport default ApproachPicker;\n"]},"metadata":{},"sourceType":"module"}