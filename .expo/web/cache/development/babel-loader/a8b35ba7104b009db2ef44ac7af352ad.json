{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Formik, validateYupSchema } from \"formik\";\nimport * as yup from \"yup\";\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport AircraftPicker from \"./AircraftPicker\";\nimport AppTextInput from \"./AppTextInput\";\nimport TailnumberPicker from \"./TailnumberPicker\";\nimport ApproachPicker from \"./ApproachPicker\";\nimport AppText from \"./AppText\";\nimport Checkbox from \"./Checkbox\";\nimport ActivityModal from \"./ActivityModal\";\nimport AppContext from \"./AppContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { STYLES } from \"../styles/styles\";\n\nfunction FlightForm(_ref) {\n  var initialValues = _ref.initialValues,\n      method = _ref.method;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      calVisible = _useState2[0],\n      setCalVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      aircraftId = _useState4[0],\n      setAircraftId = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formCount = _useState6[0],\n      setFormCount = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      scrollEnabled = _useState8[0],\n      setScrollEnabled = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      acTailMatch = _useState10[0],\n      setAcTailMatch = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      submitting = _useState12[0],\n      setSubmitting = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      addedDuration = _useState14[0],\n      setAddedDuration = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      undoAdd = _useState16[0],\n      setUndoAdd = _useState16[1];\n\n  var Context = useContext(AppContext);\n\n  function handleAircraftId(id) {\n    if (aircraftId === id) {\n      setAcTailMatch(true);\n      return true;\n    } else {\n      setAcTailMatch(false);\n      setAircraftId(id);\n      return false;\n    }\n  }\n\n  var dashNotSpace = function dashNotSpace(str) {\n    str = str.replace(/\\s/g, \"-\");\n    return str;\n  };\n\n  var required = \"Required\";\n  var number = \"Numbers only\";\n  var flightSchema = yup.object().shape({\n    date: yup.string().required(required),\n    route: yup.string().min(3).required(required),\n    aircraft_type: yup.string().required(required),\n    registration: yup.string().required(required),\n    duration: yup.number().typeError(number).required(required).min(0.1, \"Must be greater than 0.1\").max(30.0, \"Seems unlikely.\").test(\"maxDigitsAfterDecimal\", \"max 1 decimal place\", function (number) {\n      return /^\\d+(\\.\\d{1,1})?$/.test(number);\n    }),\n    landings_day: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\").integer(\"Integers only, no decimals.\"),\n    landings_night: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\").integer(\"Integers only, no decimals.\"),\n    night: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\"),\n    instrument: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\"),\n    simulated_instrument: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\"),\n    remarks: yup.string().max(256, \"256 Character Maximum\"),\n    number: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\")\n  });\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.select({\n      android: undefined,\n      ios: \"position\"\n    }),\n    keyboardVerticalOffset: Platform.select({\n      ios: 90,\n      android: 78\n    }),\n    enabled: scrollEnabled\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Formik, {\n    validateOnMount: false,\n    initialValues: initialValues,\n    validationSchema: flightSchema,\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting;\n      setTimeout(function () {\n        setSubmitting(false);\n        Context.setActivityVisible(true);\n      }, 400);\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        isValid = _ref3.isValid,\n        onSubmit = _ref3.onSubmit,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        setFieldValue = _ref3.setFieldValue,\n        handleBlur = _ref3.handleBlur;\n    return React.createElement(React.Fragment, null, React.createElement(Pressable, {\n      onPress: function onPress() {\n        setCalVisible(true);\n      }\n    }, React.createElement(View, {\n      pointerEvents: \"none\"\n    }, React.createElement(AppTextInput, {\n      isValid: errors.date ? false : true,\n      value: values.date.toString(),\n      onChangeText: handleChange(\"date\"),\n      placeholder: \"Date\",\n      onBlur: handleBlur(\"date\")\n    }))), React.createElement(View, null, errors.date ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.date) : React.createElement(View, null)), React.createElement(AppTextInput, {\n      isValid: errors.route ? false : true,\n      value: dashNotSpace(values.route),\n      onChangeText: handleChange(\"route\"),\n      placeholder: \"Route\",\n      autoCorrect: false,\n      autoCapitalize: \"characters\",\n      keyboardType: \"default\",\n      clearButtonMode: \"while-editing\",\n      onFocus: function onFocus() {\n        return setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        setScrollEnabled(true);\n        handleBlur(\"route\");\n      }\n    }), React.createElement(View, null, errors.route ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.route) : React.createElement(View, null, React.createElement(AppText, {\n      color: \"gray\"\n    }, \"ATA or ICAO Airport codes only\"))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AircraftPicker, {\n      initialValue: initialValues.aircraft_type,\n      isValid: errors.aircraft_type ? false : true,\n      style: {\n        flex: 0.5\n      },\n      fieldName: \"aircraft_type\",\n      setFieldValue: setFieldValue,\n      handleAircraftId: handleAircraftId,\n      onBlur: handleBlur(\"aircraft_type\")\n    }), React.createElement(View, null, errors.aircraft_type ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.aircraft_type) : React.createElement(View, null))), React.createElement(View, {\n      style: {\n        flex: 0.5\n      }\n    }, values.aircraft_type ? React.createElement(React.Fragment, null, React.createElement(TailnumberPicker, {\n      initialValue: initialValues.registration,\n      isValid: errors.registration ? false : true,\n      setFieldValue: setFieldValue,\n      filterBy: values.aircraft_type,\n      setAcTailMatch: setAcTailMatch,\n      aircraftId: values.aircraft_type,\n      onBlur: handleBlur(\"registration\")\n    }), React.createElement(View, null, errors.registration ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.registration) : React.createElement(View, null)), React.createElement(View, null, acTailMatch === false && method.name === \"create\" ? React.createElement(Text, {\n      style: styles.errors\n    }, \"Registration mismatch\") : React.createElement(View, null))) : React.createElement(View, null))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.7\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: errors.duration ? false : true,\n      value: values.duration,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"duration\", val);\n      },\n      placeholder: \"Duration - XX.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\",\n      onFocus: function onFocus() {\n        return setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        setScrollEnabled(true);\n        handleBlur(\"duration\");\n      }\n    }), React.createElement(View, null, errors.duration ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.duration) : React.createElement(View, null, React.createElement(AppText, null, \"Duration\")))), React.createElement(MaterialCommunityIcons, {\n      style: {\n        paddingTop: 15\n      },\n      name: \"plus\",\n      size: 30,\n      color: \"black\"\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.3\n      }\n    }, React.createElement(AppTextInput, {\n      value: undoAdd ? \"<---\" : String(addedDuration),\n      isValid: true,\n      placeholder: \"XX.X\",\n      keyboardType: \"numeric\",\n      onChangeText: function onChangeText(val) {\n        return setAddedDuration(val);\n      },\n      onFocus: function onFocus() {\n        return setScrollEnabled(false);\n      },\n      onBlur: function onBlur() {\n        return setScrollEnabled(true);\n      }\n    }), React.createElement(AppText, {\n      color: STYLES.black\n    }, \"Next leg\")), !undoAdd ? React.createElement(TouchableOpacity, {\n      disabled: addedDuration === \"\" ? true : false,\n      onPress: function onPress() {\n        setUndoAdd(true);\n        setFieldValue(\"duration\", String((Number(values.duration) + Number(addedDuration)).toFixed(1)));\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      style: {\n        paddingTop: 15,\n        paddingLeft: 5\n      },\n      name: \"keyboard-return\",\n      size: 30,\n      color: \"green\"\n    })) : React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setUndoAdd(false);\n        setFieldValue(\"duration\", String((Number(values.duration) - Number(addedDuration)).toFixed(1)));\n        setAddedDuration(\"\");\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      style: {\n        paddingTop: 15,\n        paddingLeft: 5\n      },\n      name: \"undo\",\n      size: 30,\n      color: \"red\"\n    }))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        paddingTop: 10,\n        justifyContent: \"space-between\"\n      }\n    }, React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"pilot_in_command\", !values.pilot_in_command);\n        setFieldValue(\"second_in_command\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.pilot_in_command\n    }), React.createElement(AppText, null, \"PIC\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"second_in_command\", !values.second_in_command);\n        setFieldValue(\"pilot_in_command\", false);\n        setFieldValue(\"solo\", false);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"instructor\", false);\n      },\n      isChecked: values.second_in_command\n    }), React.createElement(AppText, null, \"SIC\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"solo\", !values.solo);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"pilot_in_command\", false);\n        setFieldValue(\"second_in_command\", false);\n        setFieldValue(\"instructor\", false);\n        setFieldValue(\"simulator\", false);\n      },\n      isChecked: values.solo\n    }), React.createElement(AppText, null, \"Solo\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"dual\", !values.dual);\n        setFieldValue(\"solo\", false);\n        setFieldValue(\"instructor\", false);\n      },\n      isChecked: values.dual\n    }), React.createElement(AppText, null, \"Dual\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"instructor\", !values.instructor);\n        setFieldValue(\"dual\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.instructor\n    }), React.createElement(AppText, null, \"CFI\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"simulator\", !values.simulator);\n        setFieldValue(\"cross_country\", false);\n        setFieldValue(\"solo\", false);\n      },\n      isChecked: values.simulator\n    }), React.createElement(AppText, null, \"Sim\")), React.createElement(View, {\n      style: styles.checkboxContainer\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"cross_country\", !values.cross_country);\n        setFieldValue(\"simulator\", false);\n      },\n      isChecked: values.cross_country\n    }), React.createElement(AppText, null, \"XC\"))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.landings_day.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"landings_day\", val);\n      },\n      placeholder: \"X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.landings_day ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.landings_day) : React.createElement(View, null, React.createElement(AppText, null, \"Day Landings\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.landings_night.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"landings_night\", val);\n      },\n      placeholder: \"X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.landings_night ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.landings_night) : React.createElement(View, null, React.createElement(AppText, null, \"Night Landings\"))))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5,\n        marginRight: 10\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.instrument.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"instrument\", val);\n      },\n      placeholder: \"X.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.instrument ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.instrument) : React.createElement(View, null, React.createElement(AppText, null, \"IFR\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.simulated_instrument.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"simulated_instrument\", val);\n      },\n      placeholder: \"X.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.simulated_instrument ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.simulated_instrument) : React.createElement(View, null, React.createElement(AppText, null, \"Hood\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        flex: 0.5,\n        marginLeft: 10\n      }\n    }, React.createElement(AppTextInput, {\n      isValid: true,\n      value: values.night.toString(),\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"night\", val);\n      },\n      placeholder: \"X.X\",\n      autoCorrect: false,\n      keyboardType: \"numeric\",\n      clearButtonMode: \"while-editing\"\n    }), React.createElement(View, null, errors.night ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.night) : React.createElement(View, null, React.createElement(AppText, null, \"Night\"))))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: errors.number ? false : true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[0].approach_type\",\n      approachValue: values.approaches[0].approach_type,\n      numberKey: \"approaches[0].number\",\n      numberValue: values.approaches[0].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 0 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[0].approach_type\", \"\");\n        setFieldValue(\"approaches[0].number\", \"\");\n        setFormCount(0);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))), formCount > 0 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[1].approach_type\",\n      approachValue: values.approaches[1].approach_type,\n      numberKey: \"approaches[1].number\",\n      numberValue: values.approaches[1].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 1 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[1].approach_type\", \"\");\n        setFieldValue(\"approaches[1].number\", \"\");\n        setFormCount(0);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), formCount > 1 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[2].approach_type\",\n      approachValue: values.approaches[2].approach_type,\n      numberKey: \"approaches[2].number\",\n      numberValue: values.approaches[2].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 2 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[2].approach_type\", \"\");\n        setFieldValue(\"approaches[2].number\", \"\");\n        setFormCount(formCount - 1);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), formCount > 2 ? React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, React.createElement(ApproachPicker, {\n      isValid: true,\n      setFieldValue: setFieldValue,\n      approachKey: \"approaches[3].approach_type\",\n      approachValue: values.approaches[3].approach_type,\n      numberKey: \"approaches[3].number\",\n      numberValue: values.approaches[3].number\n    }), React.createElement(View, {\n      style: styles.clearApproachType\n    }, formCount == 3 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setFieldValue(\"approaches[3].approach_type\", \"\");\n        setFieldValue(\"approaches[3].number\", \"\");\n        setFormCount(formCount - 1);\n      }\n    }, React.createElement(AppText, {\n      color: \"red\"\n    }, \"Remove\")) : React.createElement(View, null))) : React.createElement(View, null), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      }\n    }, formCount < 3 ? React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setFormCount(formCount + 1);\n      }\n    }, React.createElement(Text, {\n      style: {\n        marginTop: 10,\n        color: \"green\"\n      }\n    }, \"Add approach\")) : React.createElement(View, {\n      style: {\n        paddingLeft: 125\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 10\n      }\n    }, React.createElement(Checkbox, {\n      onPress: function onPress() {\n        setFieldValue(\"hold\", !values.hold);\n      },\n      isChecked: values.hold\n    }), React.createElement(View, null, React.createElement(AppText, null, \"Hold\"))), React.createElement(AppTextInput, {\n      isValid: true,\n      style: {\n        paddingRight: 10,\n        paddingLeft: 10,\n        height: 80,\n        marginTop: 10,\n        borderWidth: 1,\n        borderRadius: STYLES.borderRadius,\n        borderColor: STYLES.grey\n      },\n      value: values.remarks,\n      onChangeText: function onChangeText(val) {\n        setFieldValue(\"remarks\", val);\n      },\n      placeholder: \"Remarks\",\n      autoCorrect: false,\n      multiline: true\n    }), React.createElement(View, null, errors.remarks ? React.createElement(Text, {\n      style: styles.errors\n    }, errors.remarks) : React.createElement(View, null)), React.createElement(View, {\n      style: {\n        paddingTop: 10\n      }\n    }, isValid ? React.createElement(Button, {\n      title: !Context.setActivityVisible ? \"\" : \"Submit\",\n      onPress: function onPress() {\n        onSubmit;\n        method(values);\n        setSubmitting(true);\n        Context.setActivityVisible(true);\n      }\n    }) : React.createElement(Button, {\n      title: \"Complete required fields.\"\n    })), React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: calVisible\n    }, React.createElement(View, {\n      style: styles.centeredView\n    }, React.createElement(View, {\n      style: styles.modalView\n    }, React.createElement(CalendarPicker, {\n      selectedDayColor: \"lightblue\",\n      onDateChange: function onDateChange(date) {\n        setFieldValue(\"date\", date.format(\"M/D/YYYY\"));\n        setCalVisible(false);\n      }\n    })))));\n  }), React.createElement(ActivityModal, null))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  errors: {\n    color: STYLES.danger\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  checkboxContainer: {\n    flex: 0.1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  clearApproachType: {\n    marginLeft: 0,\n    marginRight: 10,\n    paddingTop: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nexport default FlightForm;","map":{"version":3,"names":["React","useState","useContext","useEffect","Formik","validateYupSchema","yup","CalendarPicker","AircraftPicker","AppTextInput","TailnumberPicker","ApproachPicker","AppText","Checkbox","ActivityModal","AppContext","MaterialCommunityIcons","STYLES","FlightForm","initialValues","method","calVisible","setCalVisible","aircraftId","setAircraftId","formCount","setFormCount","scrollEnabled","setScrollEnabled","acTailMatch","setAcTailMatch","submitting","setSubmitting","addedDuration","setAddedDuration","undoAdd","setUndoAdd","Context","handleAircraftId","id","dashNotSpace","str","replace","required","number","flightSchema","object","shape","date","string","route","min","aircraft_type","registration","duration","typeError","max","test","landings_day","moreThan","integer","landings_night","night","instrument","simulated_instrument","remarks","Platform","select","android","undefined","ios","styles","container","values","setTimeout","setActivityVisible","errors","isValid","onSubmit","touched","handleChange","setFieldValue","handleBlur","toString","flexDirection","flex","marginRight","name","val","paddingTop","String","black","Number","toFixed","paddingLeft","justifyContent","checkboxContainer","pilot_in_command","second_in_command","solo","dual","instructor","simulator","cross_country","marginLeft","approaches","approach_type","clearApproachType","marginTop","color","hold","paddingRight","height","borderWidth","borderRadius","borderColor","grey","centeredView","modalView","format","StyleSheet","create","marginBottom","margin","backgroundColor","padding","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","danger","alignItems"],"sources":["/Users/blake/react_native/d2lb/app/components/FlightForm.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Text,\n  Modal,\n  Pressable,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  Button,\n  ScrollView,\n} from \"react-native\";\nimport { Formik, validateYupSchema } from \"formik\";\nimport * as yup from \"yup\";\n\nimport CalendarPicker from \"react-native-calendar-picker\";\nimport AircraftPicker from \"./AircraftPicker\";\nimport AppTextInput from \"./AppTextInput\";\nimport TailnumberPicker from \"./TailnumberPicker\";\nimport ApproachPicker from \"./ApproachPicker\";\nimport AppText from \"./AppText\";\nimport Checkbox from \"./Checkbox\";\nimport ActivityModal from \"./ActivityModal\";\nimport AppContext from \"./AppContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport { STYLES } from \"../styles/styles\";\n\nfunction FlightForm({ initialValues, method }) {\n  const [calVisible, setCalVisible] = useState(false);\n  const [aircraftId, setAircraftId] = useState(\"\");\n  const [formCount, setFormCount] = useState(0);\n  const [scrollEnabled, setScrollEnabled] = useState(true);\n  const [acTailMatch, setAcTailMatch] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [addedDuration, setAddedDuration] = useState(\"\");\n  const [undoAdd, setUndoAdd] = useState(false);\n\n  const Context = useContext(AppContext);\n\n  function handleAircraftId(id) {\n    if (aircraftId === id) {\n      setAcTailMatch(true);\n      return true;\n    } else {\n      setAcTailMatch(false);\n      setAircraftId(id);\n      return false;\n    }\n  }\n\n  const dashNotSpace = (str) => {\n    str = str.replace(/\\s/g, \"-\");\n    return str;\n  };\n\n  const required = \"Required\";\n  const number = \"Numbers only\";\n\n  let flightSchema = yup.object().shape({\n    date: yup.string().required(required),\n    route: yup.string().min(3).required(required),\n    aircraft_type: yup.string().required(required),\n    registration: yup.string().required(required),\n    duration: yup\n      .number()\n      .typeError(number)\n      .required(required)\n      .min(0.1, \"Must be greater than 0.1\")\n      .max(30.0, \"Seems unlikely.\")\n      .test(\"maxDigitsAfterDecimal\", \"max 1 decimal place\", (number) =>\n        /^\\d+(\\.\\d{1,1})?$/.test(number)\n      ),\n    landings_day: yup\n      .number()\n      .typeError(number)\n      .moreThan(0, \"Leave blank for 0\")\n      .integer(\"Integers only, no decimals.\"),\n    landings_night: yup\n      .number()\n      .typeError(number)\n      .moreThan(0, \"Leave blank for 0\")\n      .integer(\"Integers only, no decimals.\"),\n    night: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\"),\n    instrument: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\"),\n    simulated_instrument: yup\n      .number()\n      .typeError(number)\n      .moreThan(0, \"Leave blank for 0\"),\n    remarks: yup.string().max(256, \"256 Character Maximum\"),\n    number: yup.number().typeError(number).moreThan(0, \"Leave blank for 0\"),\n  });\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.select({ android: undefined, ios: \"position\" })}\n      keyboardVerticalOffset={Platform.select({ ios: 90, android: 78 })}\n      enabled={scrollEnabled}\n    >\n      <ScrollView>\n        <View style={styles.container}>\n          <Formik\n            validateOnMount={false}\n            initialValues={initialValues}\n            validationSchema={flightSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                setSubmitting(false);\n                Context.setActivityVisible(true);\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              isValid,\n              onSubmit,\n              touched,\n              handleChange,\n              setFieldValue,\n              handleBlur,\n            }) => (\n              <>\n                <Pressable\n                  onPress={() => {\n                    setCalVisible(true);\n                  }}\n                >\n                  <View pointerEvents='none'>\n                    <AppTextInput\n                      isValid={errors.date ? false : true}\n                      value={values.date.toString()}\n                      onChangeText={handleChange(\"date\")}\n                      placeholder='Date'\n                      onBlur={handleBlur(\"date\")}\n                    />\n                  </View>\n                </Pressable>\n                <View>\n                  {errors.date ? (\n                    <Text style={styles.errors}>{errors.date}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n                <AppTextInput\n                  isValid={errors.route ? false : true}\n                  value={dashNotSpace(values.route)}\n                  onChangeText={handleChange(\"route\")}\n                  placeholder='Route'\n                  autoCorrect={false}\n                  autoCapitalize={\"characters\"}\n                  keyboardType={\"default\"}\n                  clearButtonMode={\"while-editing\"}\n                  onFocus={() => setScrollEnabled(false)}\n                  onBlur={() => {\n                    setScrollEnabled(true);\n                    handleBlur(\"route\");\n                  }}\n                />\n                <View>\n                  {errors.route ? (\n                    <Text style={styles.errors}>{errors.route}</Text>\n                  ) : (\n                    <View>\n                      <AppText color='gray'>\n                        ATA or ICAO Airport codes only\n                      </AppText>\n                    </View>\n                  )}\n                </View>\n                <View style={{ flexDirection: \"row\" }}>\n                  <View style={{ flex: 0.5, marginRight: 10 }}>\n                    <AircraftPicker\n                      initialValue={initialValues.aircraft_type}\n                      isValid={errors.aircraft_type ? false : true}\n                      style={{ flex: 0.5 }}\n                      fieldName={\"aircraft_type\"}\n                      setFieldValue={setFieldValue}\n                      handleAircraftId={handleAircraftId}\n                      onBlur={handleBlur(\"aircraft_type\")}\n                    ></AircraftPicker>\n                    <View>\n                      {errors.aircraft_type ? (\n                        <Text style={styles.errors}>\n                          {errors.aircraft_type}\n                        </Text>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flex: 0.5 }}>\n                    {values.aircraft_type ? (\n                      <>\n                        <TailnumberPicker\n                          initialValue={initialValues.registration}\n                          isValid={errors.registration ? false : true}\n                          setFieldValue={setFieldValue}\n                          filterBy={values.aircraft_type}\n                          setAcTailMatch={setAcTailMatch}\n                          aircraftId={values.aircraft_type}\n                          onBlur={handleBlur(\"registration\")}\n                        ></TailnumberPicker>\n                        <View>\n                          {errors.registration ? (\n                            <Text style={styles.errors}>\n                              {errors.registration}\n                            </Text>\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                        <View>\n                          {acTailMatch === false && method.name === \"create\" ? (\n                            <Text style={styles.errors}>\n                              Registration mismatch\n                            </Text>\n                          ) : (\n                            <View></View>\n                          )}\n                        </View>\n                      </>\n                    ) : (\n                      <View></View>\n                    )}\n                  </View>\n                </View>\n                {/* duration row */}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <View style={{ flexDirection: \"column\", flex: 0.7 }}>\n                    <AppTextInput\n                      isValid={errors.duration ? false : true}\n                      value={values.duration}\n                      onChangeText={(val) => {\n                        setFieldValue(\"duration\", val);\n                      }}\n                      placeholder='Duration - XX.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                      onFocus={() => setScrollEnabled(false)}\n                      onBlur={() => {\n                        setScrollEnabled(true);\n                        handleBlur(\"duration\");\n                      }}\n                    ></AppTextInput>\n                    <View>\n                      {errors.duration ? (\n                        <Text style={styles.errors}>{errors.duration}</Text>\n                      ) : (\n                        <View>\n                          <AppText>Duration</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n                  <MaterialCommunityIcons\n                    style={{ paddingTop: 15 }}\n                    name='plus'\n                    size={30}\n                    color='black'\n                  />\n\n                  <View style={{ flexDirection: \"column\", flex: 0.3 }}>\n                    <AppTextInput\n                      value={undoAdd ? \"<---\" : String(addedDuration)}\n                      isValid={true}\n                      placeholder={\"XX.X\"}\n                      keyboardType={\"numeric\"}\n                      onChangeText={(val) => setAddedDuration(val)}\n                      onFocus={() => setScrollEnabled(false)}\n                      onBlur={() => setScrollEnabled(true)}\n                    ></AppTextInput>\n                    <AppText color={STYLES.black}>Next leg</AppText>\n                  </View>\n\n                  {!undoAdd ? (\n                    <TouchableOpacity\n                      disabled={addedDuration === \"\" ? true : false}\n                      onPress={() => {\n                        setUndoAdd(true);\n                        setFieldValue(\n                          \"duration\",\n                          String(\n                            (\n                              Number(values.duration) + Number(addedDuration)\n                            ).toFixed(1)\n                          )\n                        );\n                      }}\n                    >\n                      <MaterialCommunityIcons\n                        style={{ paddingTop: 15, paddingLeft: 5 }}\n                        name='keyboard-return'\n                        size={30}\n                        color='green'\n                      />\n                    </TouchableOpacity>\n                  ) : (\n                    <TouchableOpacity\n                      onPress={() => {\n                        setUndoAdd(false);\n                        setFieldValue(\n                          \"duration\",\n                          String(\n                            (\n                              Number(values.duration) - Number(addedDuration)\n                            ).toFixed(1)\n                          )\n                        );\n                        setAddedDuration(\"\");\n                      }}\n                    >\n                      <MaterialCommunityIcons\n                        style={{ paddingTop: 15, paddingLeft: 5 }}\n                        name='undo'\n                        size={30}\n                        color='red'\n                      />\n                    </TouchableOpacity>\n                  )}\n                </View>\n\n                {/* end duration row */}\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    paddingTop: 10,\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\n                          \"pilot_in_command\",\n                          !values.pilot_in_command\n                        );\n                        setFieldValue(\"second_in_command\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.pilot_in_command}\n                    ></Checkbox>\n                    <AppText>PIC</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\n                          \"second_in_command\",\n                          !values.second_in_command\n                        );\n                        setFieldValue(\"pilot_in_command\", false);\n                        setFieldValue(\"solo\", false);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"instructor\", false);\n                      }}\n                      isChecked={values.second_in_command}\n                    ></Checkbox>\n                    <AppText>SIC</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"solo\", !values.solo);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"pilot_in_command\", false);\n                        setFieldValue(\"second_in_command\", false);\n                        setFieldValue(\"instructor\", false);\n                        setFieldValue(\"simulator\", false);\n                      }}\n                      isChecked={values.solo}\n                    ></Checkbox>\n                    <AppText>Solo</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"dual\", !values.dual);\n                        setFieldValue(\"solo\", false);\n                        setFieldValue(\"instructor\", false);\n                      }}\n                      isChecked={values.dual}\n                    ></Checkbox>\n                    <AppText>Dual</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"instructor\", !values.instructor);\n                        setFieldValue(\"dual\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.instructor}\n                    ></Checkbox>\n                    <AppText>CFI</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"simulator\", !values.simulator);\n                        setFieldValue(\"cross_country\", false);\n                        setFieldValue(\"solo\", false);\n                      }}\n                      isChecked={values.simulator}\n                    ></Checkbox>\n                    <AppText>Sim</AppText>\n                  </View>\n\n                  <View style={styles.checkboxContainer}>\n                    <Checkbox\n                      onPress={() => {\n                        setFieldValue(\"cross_country\", !values.cross_country);\n                        setFieldValue(\"simulator\", false);\n                      }}\n                      isChecked={values.cross_country}\n                    ></Checkbox>\n                    <AppText>XC</AppText>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      flex: 0.5,\n                      marginRight: 10,\n                    }}\n                  >\n                    <AppTextInput\n                      isValid={true}\n                      value={values.landings_day.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"landings_day\", val);\n                      }}\n                      placeholder='X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                    <View>\n                      {errors.landings_day ? (\n                        <Text style={styles.errors}>{errors.landings_day}</Text>\n                      ) : (\n                        <View>\n                          <AppText>Day Landings</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flexDirection: \"column\", flex: 0.5 }}>\n                    <AppTextInput\n                      isValid={true}\n                      value={values.landings_night.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"landings_night\", val);\n                      }}\n                      placeholder='X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                    <View>\n                      {errors.landings_night ? (\n                        <Text style={styles.errors}>\n                          {errors.landings_night}\n                        </Text>\n                      ) : (\n                        <View>\n                          <AppText>Night Landings</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n                </View>\n                <View style={{ flexDirection: \"row\" }}>\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      flex: 0.5,\n                      marginRight: 10,\n                    }}\n                  >\n                    <AppTextInput\n                      isValid={true}\n                      value={values.instrument.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"instrument\", val);\n                      }}\n                      placeholder='X.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n                    <View>\n                      {errors.instrument ? (\n                        <Text style={styles.errors}>{errors.instrument}</Text>\n                      ) : (\n                        <View>\n                          <AppText>IFR</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View style={{ flexDirection: \"column\", flex: 0.5 }}>\n                    <AppTextInput\n                      isValid={true}\n                      value={values.simulated_instrument.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"simulated_instrument\", val);\n                      }}\n                      placeholder='X.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n\n                    <View>\n                      {errors.simulated_instrument ? (\n                        <Text style={styles.errors}>\n                          {errors.simulated_instrument}\n                        </Text>\n                      ) : (\n                        <View>\n                          <AppText>Hood</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n\n                  <View\n                    style={{\n                      flexDirection: \"column\",\n                      flex: 0.5,\n                      marginLeft: 10,\n                    }}\n                  >\n                    <AppTextInput\n                      isValid={true}\n                      value={values.night.toString()}\n                      onChangeText={(val) => {\n                        setFieldValue(\"night\", val);\n                      }}\n                      placeholder='X.X'\n                      autoCorrect={false}\n                      keyboardType={\"numeric\"}\n                      clearButtonMode={\"while-editing\"}\n                    ></AppTextInput>\n\n                    <View>\n                      {errors.night ? (\n                        <Text style={styles.errors}>{errors.night}</Text>\n                      ) : (\n                        <View>\n                          <AppText>Night</AppText>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n                </View>\n                <View style={{ flexDirection: \"row\" }}>\n                  <ApproachPicker\n                    isValid={errors.number ? false : true}\n                    setFieldValue={setFieldValue}\n                    approachKey={\"approaches[0].approach_type\"}\n                    approachValue={values.approaches[0].approach_type}\n                    numberKey={\"approaches[0].number\"}\n                    numberValue={values.approaches[0].number}\n                  ></ApproachPicker>\n                  <View style={styles.clearApproachType}>\n                    {formCount == 0 ? (\n                      <TouchableOpacity\n                        onPress={() => {\n                          setFieldValue(\"approaches[0].approach_type\", \"\");\n                          setFieldValue(\"approaches[0].number\", \"\");\n                          setFormCount(0);\n                        }}\n                      >\n                        <AppText color='red'>Remove</AppText>\n                      </TouchableOpacity>\n                    ) : (\n                      <View></View>\n                    )}\n                  </View>\n                </View>\n                {formCount > 0 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      isValid={true}\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[1].approach_type\"}\n                      approachValue={values.approaches[1].approach_type}\n                      numberKey={\"approaches[1].number\"}\n                      numberValue={values.approaches[1].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 1 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[1].approach_type\", \"\");\n                            setFieldValue(\"approaches[1].number\", \"\");\n                            setFormCount(0);\n                          }}\n                        >\n                          <AppText color='red'>Remove</AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n                {formCount > 1 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      isValid={true}\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[2].approach_type\"}\n                      approachValue={values.approaches[2].approach_type}\n                      numberKey={\"approaches[2].number\"}\n                      numberValue={values.approaches[2].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 2 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[2].approach_type\", \"\");\n                            setFieldValue(\"approaches[2].number\", \"\");\n                            setFormCount(formCount - 1);\n                          }}\n                        >\n                          <AppText color='red'>Remove</AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n                {formCount > 2 ? (\n                  <View style={{ flexDirection: \"row\" }}>\n                    <ApproachPicker\n                      isValid={true}\n                      setFieldValue={setFieldValue}\n                      approachKey={\"approaches[3].approach_type\"}\n                      approachValue={values.approaches[3].approach_type}\n                      numberKey={\"approaches[3].number\"}\n                      numberValue={values.approaches[3].number}\n                    ></ApproachPicker>\n                    <View style={styles.clearApproachType}>\n                      {formCount == 3 ? (\n                        <TouchableOpacity\n                          onPress={() => {\n                            setFieldValue(\"approaches[3].approach_type\", \"\");\n                            setFieldValue(\"approaches[3].number\", \"\");\n                            setFormCount(formCount - 1);\n                          }}\n                        >\n                          <AppText color='red'>Remove</AppText>\n                        </TouchableOpacity>\n                      ) : (\n                        <View></View>\n                      )}\n                    </View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n                <View style={{ flexDirection: \"row\" }}>\n                  {formCount < 3 ? (\n                    <TouchableOpacity\n                      onPress={() => setFormCount(formCount + 1)}\n                    >\n                      <Text style={{ marginTop: 10, color: \"green\" }}>\n                        Add approach\n                      </Text>\n                    </TouchableOpacity>\n                  ) : (\n                    <View style={{ paddingLeft: 125 }}></View>\n                  )}\n                </View>\n                <View style={{ flexDirection: \"row\", marginTop: 10 }}>\n                  <Checkbox\n                    onPress={() => {\n                      setFieldValue(\"hold\", !values.hold);\n                    }}\n                    isChecked={values.hold}\n                  ></Checkbox>\n                  <View>\n                    <AppText>Hold</AppText>\n                  </View>\n                </View>\n                <AppTextInput\n                  isValid={true}\n                  style={{\n                    paddingRight: 10,\n                    paddingLeft: 10,\n                    height: 80,\n                    marginTop: 10,\n                    borderWidth: 1,\n                    borderRadius: STYLES.borderRadius,\n                    borderColor: STYLES.grey,\n                  }}\n                  value={values.remarks}\n                  onChangeText={(val) => {\n                    setFieldValue(\"remarks\", val);\n                  }}\n                  placeholder='Remarks'\n                  autoCorrect={false}\n                  multiline={true}\n                ></AppTextInput>\n                <View>\n                  {errors.remarks ? (\n                    <Text style={styles.errors}>{errors.remarks}</Text>\n                  ) : (\n                    <View></View>\n                  )}\n                </View>\n                <View style={{ paddingTop: 10 }}>\n                  {isValid ? (\n                    <Button\n                      title={!Context.setActivityVisible ? \"\" : \"Submit\"}\n                      onPress={() => {\n                        onSubmit;\n                        method(values);\n                        setSubmitting(true);\n                        Context.setActivityVisible(true);\n                      }}\n                    ></Button>\n                  ) : (\n                    <Button title='Complete required fields.'></Button>\n                  )}\n                </View>\n                {/* <View style={{ marginTop: 30 }}>\n                  <Text>{JSON.stringify(values, null, \"  \")}</Text>\n                </View> */}\n                <Modal\n                  animationType='slide'\n                  transparent={true}\n                  visible={calVisible}\n                >\n                  <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                      <CalendarPicker\n                        selectedDayColor='lightblue'\n                        onDateChange={(date) => {\n                          setFieldValue(\"date\", date.format(\"M/D/YYYY\"));\n                          setCalVisible(false);\n                        }}\n                      />\n                    </View>\n                  </View>\n                </Modal>\n              </>\n            )}\n          </Formik>\n          <ActivityModal></ActivityModal>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    marginBottom: 20,\n  },\n\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  errors: {\n    color: STYLES.danger,\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n\n  checkboxContainer: {\n    flex: 0.1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n\n  clearApproachType: {\n    marginLeft: 0,\n    marginRight: 10,\n    paddingTop: 10,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default FlightForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}