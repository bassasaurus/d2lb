{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/blake/react_native/d2lb/app/components/TailPicker.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport AppTextInput from \"./AppTextInput\";\nimport api from \"../api/axiosConfig\";\nimport { STYLES } from \"../styles/styles\";\nimport FlatListItemSeparator from \"./FlatListItemSeparator\";\n\nfunction TailPicker(_ref) {\n  var _this = this;\n\n  var setFieldValue = _ref.setFieldValue,\n      value = _ref.value,\n      aircraftId = _ref.aircraftId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var fetchData = function fetchData() {\n    var result;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.get(\"/api/tailnumber_picker/\" + aircraftId));\n\n          case 2:\n            result = _context.sent;\n            setData(result.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setVisible(false);\n        setFieldValue(\"tailnumber\", item.registration);\n      }\n    }, React.createElement(Text, {\n      style: styles.listItem\n    }, item.registration)));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Pressable, {\n    onPress: function onPress() {\n      fetchData();\n      setVisible(true);\n    }\n  }, React.createElement(View, {\n    pointerEvents: \"none\"\n  }, React.createElement(AppTextInput, {\n    value: value,\n    placeholder: \"Tailnumber\"\n  }))), React.createElement(View, {\n    style: styles.centeredView\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible\n  }, React.createElement(View, {\n    style: styles.modalView\n  }, React.createElement(FlatList, {\n    data: data.results,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: FlatListItemSeparator\n  })))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  input: {\n    borderWidth: 1\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  listItem: {\n    fontFamily: STYLES.font,\n    fontSize: STYLES.fontSizeExtraLarge,\n    color: STYLES.blue,\n    marginTop: 20\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 0\n  }\n});\nexport default TailPicker;","map":{"version":3,"sources":["/Users/blake/react_native/d2lb/app/components/TailPicker.js"],"names":["React","useState","TouchableOpacity","AppTextInput","api","STYLES","FlatListItemSeparator","TailPicker","setFieldValue","value","aircraftId","data","setData","visible","setVisible","fetchData","get","result","renderItem","item","styles","container","registration","listItem","centeredView","modalView","results","id","toString","StyleSheet","create","flex","input","borderWidth","margin","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","fontFamily","font","fontSize","fontSizeExtraLarge","color","blue","marginTop","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Modal,\n  Text,\n  FlatList,\n  Pressable,\n} from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport AppTextInput from \"./AppTextInput\";\n\nimport api from \"../api/axiosConfig\";\nimport { STYLES } from \"../styles/styles\";\nimport FlatListItemSeparator from \"./FlatListItemSeparator\";\n\nfunction TailPicker({ setFieldValue, value, aircraftId }) {\n  const [data, setData] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const fetchData = async () => {\n    const result = await api.get(`/api/tailnumber_picker/${aircraftId}`);\n    setData(result.data);\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={styles.container}>\n      <TouchableOpacity\n        onPress={() => {\n          setVisible(false);\n          setFieldValue(\"tailnumber\", item.registration);\n        }}\n      >\n        <Text style={styles.listItem}>{item.registration}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <>\n      <Pressable\n        onPress={() => {\n          fetchData();\n          setVisible(true);\n        }}\n      >\n        <View pointerEvents={\"none\"}>\n          <AppTextInput value={value} placeholder={\"Tailnumber\"}></AppTextInput>\n        </View>\n      </Pressable>\n\n      <View style={styles.centeredView}>\n        <Modal animationType='slide' transparent={true} visible={visible}>\n          <View style={styles.modalView}>\n            <FlatList\n              data={data.results}\n              renderItem={renderItem}\n              keyExtractor={(item) => item.id.toString()}\n              ItemSeparatorComponent={FlatListItemSeparator}\n            />\n          </View>\n        </Modal>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  input: {\n    borderWidth: 1,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  listItem: {\n    fontFamily: STYLES.font,\n    fontSize: STYLES.fontSizeExtraLarge,\n    color: STYLES.blue,\n    marginTop: 20,\n  },\n\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 0,\n  },\n});\n\nexport default TailPicker;\n"]},"metadata":{},"sourceType":"module"}